/*
 *  Main authors:
 *     Christian Schulte <schulte@gecode.org>
 *
 *  Copyright:
 *     Christian Schulte, 2002
 *
 *  Last modified:
 *     $Date$ by $Author$
 *     $Revision$
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  See the file "LICENSE" for information on usage and
 *  redistribution of this file, and for a
 *     DISCLAIMER OF ALL WARRANTIES.
 *
 */

namespace Gecode {

  /**
   * \brief Check whether modification event \a me is failed.
   * \ingroup TaskActor
   */ 
  bool me_failed(ModEvent me);
  /**
   * \brief Check whether modification event \a me describes variable modification.
   * \ingroup TaskActor
   */ 
  bool me_modified(ModEvent me);


  /*
   * Modification events
   *
   */

  forceinline bool
  me_failed(ModEvent me) {
    return me < ME_GEN_NONE;
  }

  forceinline bool
  me_modified(ModEvent me) {
    return me > ME_GEN_NONE;
  }

}

// STATISTICS: kernel-other

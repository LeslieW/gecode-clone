#  -*-Makefile-*-
#
#  Main authors:
#     Christian Schulte <schulte@gecode.org>
#     Guido Tack <tack@gecode.org>
#
#  Copyright:
#     Christian Schulte, 2005
#     Guido Tack, 2005
#
#  Last modified:
#     $Date$ by $Author$
#     $Revision$
#
#  This file is part of Gecode, the generic constraint
#  development environment:
#     http://www.gecode.org
#
#  Permission is hereby granted, free of charge, to any person obtaining
#  a copy of this software and associated documentation files (the
#  "Software"), to deal in the Software without restriction, including
#  without limitation the rights to use, copy, modify, merge, publish,
#  distribute, sublicense, and/or sell copies of the Software, and to
#  permit persons to whom the Software is furnished to do so, subject to
#  the following conditions:
#
#  The above copyright notice and this permission notice shall be
#  included in all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

#
# General Settings
#

export prefix = @prefix@
export exec_prefix = @exec_prefix@
export bindir = @bindir@
export libdir = @libdir@
export sharedlibdir = @sharedlibdir@
export includedir = @includedir@
export pkgincludedir = $(includedir)/gecode
export srcdir = @srcdir@
export datarootdir = @datarootdir@
export datadir = @datadir@
export docdir= @docdir@
export top_srcdir = @top_srcdir@
export top_builddir = .

# Install to different root directory
DESTDIR=

export subdirs = @subdirs@

export VERSION		= @VERSION@

export CXX = @CXX@
export CC = @CC@
export MOC = moc
ifeq "$(top_srcdir)" "$(top_builddir)"
CPPFLAGS=-I$(top_srcdir)
else
CPPFLAGS=-I$(top_builddir) -I$(top_srcdir)
endif
export CPPFLAGS
export CXXFLAGS = $(CPPFLAGS) @CXXFLAGS@ $(CXXUSR)
export CFLAGS = $(CPPFLAGS) @CFLAGS@ $(CUSR)
export EXAMPLES_EXTRA_CXXFLAGS = @EXAMPLES_EXTRA_CXXFLAGS@

export QT_CPPFLAGS = @QTDEFINES@ @QTINCLUDES@
export LINKQT = @QTLIBS@

export BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
export BOOST_LINK = @BOOST_LINK@

export GLDFLAGS = @GLDFLAGS@
export DLLFLAGS = @DLLFLAGS@
export DLLPATH = @DLLPATH@

export RANLIB = @RANLIB@
export TAR = tar

#
# Use suffixes to get consistent treatment of dots
#
export OBJSUFFIX	= .@OBJEXT@
export SBJSUFFIX	= .@SBJEXT@
export DLLSUFFIX	= @DLL_ARCH@@USERSUFFIX@.@DLLEXT@
export MANIFESTSUFFIX	= @DLL_ARCH@@USERSUFFIX@.@DLLEXT@.manifest
export LIBSUFFIX	= @DLL_ARCH@@USERSUFFIX@.@LIBEXT@
export PDBSUFFIX	= @DLL_ARCH@@USERSUFFIX@.pdb
export EXPSUFFIX	= @DLL_ARCH@@USERSUFFIX@.exp
export ILKSUFFIX	= @DLL_ARCH@@USERSUFFIX@.ilk
export STATICLIBSUFFIX	= .@STATICLIBEXT@
export EXESUFFIX	= @EXEEXT@

export LIBPREFIX 	= @LIBPREFIX@
export LINKPREFIX	= @LINKPREFIX@
export LINKSUFFIX	= @DLL_ARCH@@USERSUFFIX@@LINKSUFFIX@

export SOLINKSUFFIX     = @DLL_ARCH@@USERSUFFIX@@SOLINKSUFFIX@
export SOSUFFIX         = @DLL_ARCH@@USERSUFFIX@@SOSUFFIX@

#
# Programs
#
export RMF		= rm -rf
export MV		= mv

ifeq "@need_soname@" "yes"
export CREATELINK       = ln -fs
else
export CREATELINK       = @true
endif


#
# SUPPORT COMPONENTS
#
SUPPORTSRC0 = \
	exception symbol heap
SUPPORTHDR0 = \
	block-allocator cast dynamic-array \
	dynamic-stack exception map heap \
	macros random sort \
	static-stack symbol \
	marked-pointer int-type auto-link

BUDDYSRC0 = \
	bddio.c \
	bddop.c \
	bvec.c \
	cache.c \
	cppext.cpp \
	fdd.c \
	imatrix.c \
	kernel.c \
	pairs.c \
	prime.c \
	reorder.c \
	tree.c

BUDDYHDR0 = \
	bdd.h \
	bddtree.h \
	bvec.h \
	cache.h \
	config.h \
	fdd.h \
	imatrix.h \
	kernel.h \
	prime.h

BUDDYSRC = $(BUDDYSRC0:%=gecode/support/buddy/%)
BUDDYHDR = $(BUDDYHDR0:%=gecode/support/buddy/%)
BUDDYOBJ0 = $(BUDDYSRC:%.c=%$(OBJSUFFIX))
BUDDYOBJ = $(BUDDYOBJ0:%.cpp=%$(OBJSUFFIX))

SUPPORTSRC1 =  $(SUPPORTSRC0:%=gecode/support/%.cpp)
SUPPORTHDR  =  gecode/support.hh \
	$(SUPPORTHDR0:%=gecode/support/%.hpp) \
	$(BUDDYHDR)
SUPPORTOBJ  =  $(SUPPORTSRC1:%.cpp=%$(OBJSUFFIX)) $(BUDDYOBJ)
SUPPORTSRC  =  $(SUPPORTSRC1) $(BUDDYSRC)

export SUPPORTDLL	= $(LIBPREFIX)@SUPPORT@$(DLLSUFFIX)
export SUPPORTLIB	= $(LIBPREFIX)@SUPPORT@$(LIBSUFFIX)
ifeq "@need_soname@" "yes"
export SUPPORTSONAME     = \
	@WLSONAME@$(LIBPREFIX)@SUPPORT@$(SOSUFFIX)
else
export SUPPORTSONAME     = 
endif
export SUPPORTSTATICLIB	= $(LIBPREFIX)@SUPPORT@$(STATICLIBSUFFIX)
export LINKSUPPORT      = \
	$(LINKPREFIX)@SUPPORT@$(LINKSUFFIX)
SUPPORTBUILDDIRS = support support/buddy


#
# KERNEL COMPONENTS
#

VARIMPHDR = \
	gecode/kernel/var-type.hpp \
	gecode/kernel/var-imp.hpp

VARIMP = $(VARIMPHDR) gecode/kernel/var-type.cpp

KERNELSRC0 = \
	core reflection var-map var-type memory-manager branch \
	region

KERNELHDR0 = \
	array shared-array core exception \
	macros memory-config memory-manager region modevent \
	propagator advisor view var var-traits var-map reflection \
	branch branching branching-view branching-tiebreak \
	branching-val

KERNELSRC = $(KERNELSRC0:%=gecode/kernel/%.cpp)
KERNELHDR	= \
	gecode/kernel.hh \
	$(KERNELHDR0:%=gecode/kernel/%.hpp) \
	$(VARIMPHDR)
KERNELOBJ	= $(KERNELSRC:%.cpp=%$(OBJSUFFIX))

export KERNELDLL	= $(LIBPREFIX)@KERNEL@$(DLLSUFFIX)
export KERNELLIB	= $(LIBPREFIX)@KERNEL@$(LIBSUFFIX)
ifeq "@need_soname@" "yes"
export KERNELSONAME     = \
	@WLSONAME@$(LIBPREFIX)@KERNEL@$(SOSUFFIX)
else
export KERNELSONAME     = 
endif
export KERNELSTATICLIB	= $(LIBPREFIX)@KERNEL@$(STATICLIBSUFFIX)
export LINKKERNEL      = $(LINKPREFIX)@KERNEL@$(LINKSUFFIX)
KERNELBUILDDIRS = kernel

EXTRA_HEADERS   = gecode/support/config.hpp

#
# SEARCH COMPONENTS
#

SEARCHSRC0 = \
	dfs.cpp lds.cpp bab.cpp stop.cpp options.cpp reco-stack.cpp
SEARCHHDR0 = \
	bab.hpp dfs.hpp lds.hpp restart.hpp  \
	reco-stack.hpp statistics.hpp \
	engine-ctrl.hpp stop.hpp options.hpp

SEARCHSRC	= $(SEARCHSRC0:%=gecode/search/%)
SEARCHHDR	= gecode/search.hh $(SEARCHHDR0:%=gecode/search/%)
SEARCHOBJ	= $(SEARCHSRC:%.cpp=%$(OBJSUFFIX))

ifeq "@enable_search@" "yes"
export SEARCHDLL	= $(LIBPREFIX)@SEARCH@$(DLLSUFFIX)
export SEARCHSTATICLIB	= $(LIBPREFIX)@SEARCH@$(STATICLIBSUFFIX)
export SEARCHLIB	= $(LIBPREFIX)@SEARCH@$(LIBSUFFIX)
export LINKSEARCH       = $(LINKPREFIX)@SEARCH@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export SEARCHSONAME     = \
	@WLSONAME@$(LIBPREFIX)@SEARCH@$(SOSUFFIX)
else
export SEARCHSONAME     = 
endif
else
export SEARCHDLL	=
export SEARCHSTATICLIB	=
export SEARCHLIB	=
export LINKSEARCH       =
endif
SEARCHBUILDDIRS = search

#
# INTEGER COMPONENTS
#

INTSRC0 = \
	int-set.cpp var-imp/int.cpp var-imp/bool.cpp var/int.cpp \
	var/bool.cpp array.cpp bool.cpp \
	extensional/dfa.cpp extensional/tuple-set.cpp extensional.cpp \
	dom.cpp rel.cpp element.cpp count.cpp arithmetic.cpp \
	linear/int-post.cpp linear-int.cpp \
	linear/bool-post.cpp linear-bool.cpp \
	branch.cpp \
	distinct.cpp cumulatives.cpp \
	sorted.cpp gcc.cpp \
	channel.cpp channel/link-single.cpp channel/link-multi.cpp \
	circuit.cpp unshare.cpp
INTHDR0 = \
	limits.hpp support-values.hh support-values.hpp \
	arithmetic/abs.hpp arithmetic/max.hpp arithmetic/mult.hpp \
	arithmetic/sqr.hpp arithmetic/sqrt.hpp arithmetic/divmod.hpp \
	bool/or.hpp bool/eq.hpp bool/lq.hpp bool/eqv.hpp bool/base.hpp \
	bool/clause.hpp \
	branch/post-val-int.hpp branch/post-val-bool.hpp \
	branch/select-val.hpp \
	branch/select-values.hpp branch/select-view.hpp \
	count/view.hpp count/int.hpp count/rel.hpp \
	cumulatives/val.hpp \
	distinct/bilink.hpp distinct/bnd.hpp distinct/combptr.hpp \
	distinct/dom.hpp distinct/edge.hpp distinct/node.hpp \
	distinct/val.hpp distinct/ter-dom.hpp \
	dom/range.hpp dom/spec.hpp \
	element/int.hpp element/view.hpp \
	gcc/bnd.hpp gcc/dom.hpp gcc/gccbndsup.hpp gcc/graphsup.hpp \
	gcc/lbc.hpp gcc/ubc.hpp gcc/val.hpp gcc/occur.hpp \
	linear/post.hpp \
	linear/int-noview.hpp linear/int-bin.hpp linear/int-ter.hpp \
	linear/int-nary.hpp linear/int-dom.hpp \
	linear/bool-int.hpp linear/bool-view.hpp linear/bool-scale.hpp \
	extensional/dfa.hpp extensional/layered-graph.hpp \
	extensional/tuple-set.hpp extensional/base.hpp \
	extensional/basic.hpp extensional/incremental.hpp \
	extensional/bitset.hpp \
	rel/eq.hpp rel/lex.hpp rel/lq-le.hpp rel/nq.hpp \
	sorted/matching.hpp sorted/narrowing.hpp \
	sorted/order.hpp sorted/propagate.hpp sorted/sortsup.hpp \
	int-set.hpp var-imp/delta.hpp var/print.hpp var/bool.hpp \
	var-imp/int.hpp var-imp/bool.hpp var/int.hpp \
	view/bool.hpp view/constint.hpp view/zero.hpp view/int.hpp \
	view/minus.hpp view/print.hpp \
	view/offset.hpp view/rtest.hpp view/scale.hpp view/iter.hpp \
	arithmetic.hh array.hpp bool.hh branch.hh \
	count.hh cumulatives.hh distinct.hh dom.hh \
	element.hh exception.hpp  gcc.hh linear.hh \
	propagator.hpp extensional.hh rel.hh \
	sorted.hh var-imp.hpp view.hpp \
	channel.hh channel/dom.hpp channel/val.hpp \
	channel/base.hpp channel/link-single.hpp channel/link-multi.hpp \
	circuit.hh circuit/base.hpp circuit/val.hpp circuit/dom.hpp

INTSRC		= $(INTSRC0:%=gecode/int/%) \
	$(top_srcdir)/gecode/int/branch/post-view-int.cpp \
	$(top_srcdir)/gecode/int/branch/post-view-bool.cpp
INTHDR		= gecode/int.hh $(INTHDR0:%=gecode/int/%)
INTOBJ0		= $(INTSRC:%.cpp=%$(OBJSUFFIX))
INTOBJ		= $(subst $(top_srcdir)/,,$(INTOBJ0))

ifeq "@enable_int_vars@" "yes"
export INTDLL		= $(LIBPREFIX)@INT@$(DLLSUFFIX)
export INTSTATICLIB	= $(LIBPREFIX)@INT@$(STATICLIBSUFFIX)
export INTLIB		= $(LIBPREFIX)@INT@$(LIBSUFFIX)
export LINKINT      	= $(LINKPREFIX)@INT@$(LINKSUFFIX)
export POSTINT          = gecode/int.hh
ifeq "@need_soname@" "yes"
export INTSONAME     = \
	@WLSONAME@$(LIBPREFIX)@INT@$(SOSUFFIX)
else
export INTSONAME     = 
endif
else
export INTDLL		=
export INTSTATICLIB	=
export INTLIB		=
export LINKINT      	=
export POSTINT          =
endif
INTBUILDDIRS	= \
	int int/var int/var-imp int/view int/extensional \
	int/channel int/linear int/bool int/branch

#
# SET COMPONENTS
#

SETSRC0 =								 \
	cardinality.cpp convex.cpp convex/conv.cpp convex/hull.cpp \
	dom.cpp rel.cpp rel-op.cpp rel-op-const.cpp				 \
	int.cpp								 \
	element.cpp element/disjoint.cpp sequence.cpp			 \
	distinct.cpp distinct/atmostOne.cpp				 \
	sequence/seq.cpp sequence/seq-u.cpp array.cpp var-imp/set.cpp	 \
	var-imp/integerset.cpp var/set.cpp 		 \
	projectors.cpp							 \
	projectors/set-expr.cpp projectors/projector.cpp			 \
	projectors/projector-set.cpp					 \
	projectors/propagator/re-nary.cpp				 \
	projectors/compiler.cpp						 \
	projectors/formula.cpp
SETHDR0 =								     \
	limits.hpp \
	view.hpp exception.hpp int.hh element.hh var-imp.hpp                 \
	int/card.hpp     						     \
	int/match.hpp int/channel-int.hpp int/minmax.hpp int/weights.hpp     \
	int/channel-bool.hpp element/idxarray.hh			     \
	element/idxarray.hpp element/inter.hpp element/union.hpp             \
	element/unionConst.hpp                                               \
	element/disjoint.hpp array.hpp					     \
	var-imp/set.hpp var-imp/integerset.hpp	     			     \
	var-imp/delta.hpp var-imp/iter.hpp 				     \
	var/set.hpp var/print.hpp					     \
	view/complement.hpp view/const.hpp view/set.hpp view/singleton.hpp   \
	view/offset.hpp view/print.hpp                                       \
	rel/subset.hpp rel/re-subset.hpp rel/eq.hpp rel/nq.hpp rel/re-eq.hpp \
	rel/common.hpp rel/nosubset.hpp sequence.hh	                     \
	rel-op/union.hpp rel-op/partition.hpp rel-op/subofunion.hpp	     \
	rel-op/inter.hpp rel-op/superofinter.hpp			     \
	rel-op/post.hpp rel-op/common.hpp rel.hh			     \
	distinct.hh distinct/atmostOne.hpp				     \
	sequence/seq.hpp sequence/seq-u.hpp				     \
	sequence/common.hpp convex/conv.hpp convex/hull.hpp convex.hh	     \
	propagator.hpp rel-op.hh					     \
	branch.hh branch/select-val.hpp branch/select-view.hpp		     \
	branch/post-val.hpp \
	projectors.hh projectors-compiler.hh				     \
	projectors/projector.hpp					     \
	projectors/projector-set.hpp projectors/set-expr.hpp		     \
	projectors/propagator.hh projectors/propagator/nary.hpp		     \
	projectors/propagator/card.hpp projectors/propagator/re-nary.hpp     \
	projectors/formula.hpp

SETSRC		= $(SETSRC0:%=gecode/set/%) \
	$(top_srcdir)/gecode/set/branch.cpp
SETHDR		= gecode/set.hh $(SETHDR0:%=gecode/set/%)
SETOBJ0		= $(SETSRC:%.cpp=%$(OBJSUFFIX))
SETOBJ		= $(subst $(top_srcdir)/,,$(SETOBJ0))

ifeq "@enable_set_vars@" "yes"
export SETDLL		= $(LIBPREFIX)@SET@$(DLLSUFFIX)
export SETSTATICLIB	= $(LIBPREFIX)@SET@$(STATICLIBSUFFIX)
export SETLIB		= $(LIBPREFIX)@SET@$(LIBSUFFIX)
export LINKSET      	= $(LINKPREFIX)@SET@$(LINKSUFFIX)
export POSTSET          = gecode/set.hh
ifeq "@need_soname@" "yes"
export SETSONAME     = \
	@WLSONAME@$(LIBPREFIX)@SET@$(SOSUFFIX)
else
export SETSONAME     = 
endif
else
export SETDLL		=
export SETSTATICLIB	=
export SETLIB		=
export LINKSET      	=
export POSTSET          =
endif
SETBUILDDIRS	=						\
	set set/convex set/distinct set/int set/rel set/rel-op	\
	set/element set/sequence set/var set/var-imp set/view 	\
	set/projectors set/projectors/propagator

#
# CpltSet COMPONENTS
#

CPLTSETSRC0 =	\
	array.cpp support.cpp             			          \
	bddmanager.cpp 							  \
	var-imp/cpltset.cpp var/cpltset.cpp                    \
	constraints/singleton.cpp 					  \
	constraints/dom.cpp constraints/rel.cpp constraints/cardinality.cpp  \
	constraints/atmost.cpp constraints/partition.cpp 			  \
	constraints/select.cpp constraints/distinct.cpp  			  \
	constraints/rangeroots.cpp

CPLTSETHDR0 =		                \
	view.hpp bddmanager.hpp exception.hpp array.hpp \
	support.hpp var-imp.hpp \
	var-imp/cpltset.hpp \
	var/cpltset.hpp var/print.hpp \
	view/cpltset.hpp view/print.hpp \
	propagators.hh \
	propagators/unary.hpp propagators/binary.hpp \
	propagators/nary.hpp propagators/naryone.hpp propagators/narytwo.hpp \
	propagators/singleton.hpp \
	branch.hh branch/select-val.hpp branch/select-view.hpp	\
	branch/post-val.hpp


CPLTSETSRC	= $(CPLTSETSRC0:%=gecode/cpltset/%) \
	$(top_srcdir)/gecode/cpltset/branch.cpp
CPLTSETHDR	= gecode/cpltset.hh $(CPLTSETHDR0:%=gecode/cpltset/%)
CPLTSETOBJ0	= $(CPLTSETSRC:%.cpp=%$(OBJSUFFIX))
CPLTSETOBJ	= $(subst $(top_srcdir)/,,$(CPLTSETOBJ0))

ifeq "@enable_cpltset_vars@" "yes"
export CPLTSETDLL		= $(LIBPREFIX)@CPLTSET@$(DLLSUFFIX)
export CPLTSETSTATICLIB	= $(LIBPREFIX)@CPLTSET@$(STATICLIBSUFFIX)
export CPLTSETLIB		= $(LIBPREFIX)@CPLTSET@$(LIBSUFFIX)
ifeq "@CXX@" "cl"
export LINKCPLTSET      	= $(LINKPREFIX)@CPLTSET@$(LINKSUFFIX) 
else
export LINKCPLTSET      	= $(LINKPREFIX)@CPLTSET@$(LINKSUFFIX) $(CPLTSETFLAG)
endif

ifeq "@need_soname@" "yes"
export CPLTSETSONAME     = \
	@WLSONAME@$(LIBPREFIX)@CPLTSET@$(SOSUFFIX)
else
export CPLTSETSONAME     = 
endif
else
export CPLTSETDLL		=
export CPLTSETSTATICLIB	=
export CPLTSETLIB		=
export LINKCPLTSET      	=
endif
CPLTSETBUILDDIRS	=						\
	cpltset cpltset/var cpltset/var-imp cpltset/view cpltset/propagators \
	cpltset/branch cpltset/constraints

#
# MINIMODEL COMPONENTS
#

MMSRC0 = \
	bool-expr.cpp reg.cpp 
MMHDR0 = \
	lin-expr.hpp lin-rel.hpp exception.hpp matrix.hpp \
	bool-expr.hpp bool-rel.hpp optimize.hpp arithmetic.hpp

MMSRC 		= $(MMSRC0:%=gecode/minimodel/%)
MMHDR 		= gecode/minimodel.hh $(MMHDR0:%=gecode/minimodel/%)
MMOBJ		= $(MMSRC:%.cpp=%$(OBJSUFFIX))
MMSBJ		= $(MMSRC:%.cpp=%$(SBJSUFFIX))

ifeq "@enable_minimodel@" "yes"
export MMDLL		= $(LIBPREFIX)@MM@$(DLLSUFFIX)
export MMSTATICLIB	= $(LIBPREFIX)@MM@$(STATICLIBSUFFIX)
export MMLIB		= $(LIBPREFIX)@MM@$(LIBSUFFIX)
export LINKMM      	= $(LINKPREFIX)@MM@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export MMSONAME     = \
	@WLSONAME@$(LIBPREFIX)@MM@$(SOSUFFIX)
else
export MMSONAME     = 
endif
else
export MMDLL		=
export MMSTATICLIB	=
export MMLIB		=
export LINKMM      	=
endif
MMBUILDDIRS	= minimodel

#
# SCHEDULING COMPONENTS
#

SCHEDSRC0 = \
	unary.cpp
SCHEDHDR0 = \
	exception.hpp \
	imp/schedule.hpp imp/resource.hpp imp/task.hpp

SCHEDSRC 	= $(SCHEDSRC0:%=gecode/scheduling/%)
SCHEDHDR 	= gecode/scheduling.hh $(SCHEDHDR0:%=gecode/scheduling/%)
SCHEDOBJ	= $(SCHEDSRC:%.cpp=%$(OBJSUFFIX))
SCHEDSBJ	= $(SCHEDSRC:%.cpp=%$(SBJSUFFIX))

ifeq "@enable_scheduling@" "yes"
export SCHEDDLL		= $(LIBPREFIX)@SCHED@$(DLLSUFFIX)
export SCHEDSTATICLIB	= $(LIBPREFIX)@SCHED@$(STATICLIBSUFFIX)
export SCHEDLIB		= $(LIBPREFIX)@SCHED@$(LIBSUFFIX)
export LINKSCHED      	= $(LINKPREFIX)@SCHED@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export SCHEDSONAME     = \
	@WLSONAME@$(LIBPREFIX)@SCHED@$(SOSUFFIX)
else
export SCHEDSONAME     = 
endif
else
export SCHEDDLL		=
export SCHEDSTATICLIB	=
export SCHEDLIB		=
export LINKSCHED      	=
endif
SCHEDBUILDDIRS	= scheduling

#
# SERIALIZATION COMPONENTS
#

SERSRC0 = \
	flatzinc.cpp javascript.cpp boost.cpp

SERREGSRC = gecode/serialization/register.cpp

ifeq "@enable_qt@" "yes"
SERMOCSRC0 = moc_javascript.cpp
else
SERMOCSRC0 =
endif

SERHDR0 = \
	boost.hpp javascript.hh

SERSRC 		= $(SERSRC0:%=gecode/serialization/%) 
SERMOCSRC	= $(SERMOCSRC0:%=gecode/serialization/%)
SERHDR 		= gecode/serialization.hh $(SERHDR0:%=gecode/serialization/%)
SEROBJ		= \
	$(SERSRC:%.cpp=%$(OBJSUFFIX)) \
	$(SERMOCSRC:%.cpp=%$(OBJSUFFIX)) \
	$(SERREGSRC:%.cpp=%$(OBJSUFFIX))
SERSBJ		= \
	$(SERSRC:%.cpp=%$(SBJSUFFIX)) \
	$(SERMOCSRC:%.cpp=%$(SBJSUFFIX)) \
	$(SERREGSRC:%.cpp=%$(SBJSUFFIX))

ifeq "@enable_serialization@" "yes"
export SERDLL		= $(LIBPREFIX)@SER@$(DLLSUFFIX)
export SERSTATICLIB	= $(LIBPREFIX)@SER@$(STATICLIBSUFFIX)
export SERLIB		= $(LIBPREFIX)@SER@$(LIBSUFFIX)
export LINKSER      	= $(LINKPREFIX)@SER@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export SERSONAME     = \
	@WLSONAME@$(LIBPREFIX)@SER@$(SOSUFFIX)
else
export SERSONAME     = 
endif
else
export SERDLL		=
export SERSTATICLIB	=
export SERLIB		=
export LINKSER      	=
endif
SERBUILDDIRS	= serialization

#
# ITERATOR HEADERS
#
ITERHDR0 =							\
	ranges-add ranges-append ranges-array ranges-cache	\
	ranges-compl ranges-diff ranges-empty			\
	ranges-inter ranges-minmax ranges-minus			\
	ranges-offset ranges-operations ranges-scale		\
	ranges-singleton ranges-singleton-append		\
	ranges-size ranges-union ranges-values			\
	ranges-negative ranges-positive ranges-map		\
	values-array values-minus values-offset values-ranges 	\
	values-positive values-negative				\
	values-singleton values-unique values-inter 		\
	values-union values-map					\
	virtual-ranges virtual-ranges-union			\
	virtual-ranges-inter virtual-ranges-compl               \
	priority-queue
ITERHDR = gecode/iter.hh \
	$(ITERHDR0:%=gecode/iter/%.hpp)

#
# DDS
#

DDSSRC0 = decomposing-branching dds
DDSHDR0 = decomposing-branching dds

DDSSRC 		= $(DDSSRC0:%=gecode/dds/%.cpp) 
DDSHDR 		= gecode/dds.hh $(DDSHDR0:%=gecode/dds/%.hpp)
DDSOBJ		= $(DDSSRC:%.cpp=%$(OBJSUFFIX))
DDSSBJ		= $(DDSSRC:%.cpp=%$(SBJSUFFIX))

ifeq "@enable_dds@" "yes"
export DDSDLL		= $(LIBPREFIX)@DDS@$(DLLSUFFIX)
export DDSSTATICLIB	= $(LIBPREFIX)@DDS@$(STATICLIBSUFFIX)
export DDSLIB		= $(LIBPREFIX)@DDS@$(LIBSUFFIX)
export LINKDDS      	= $(LINKPREFIX)@DDS@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export DDSSONAME     = \
	@WLSONAME@$(LIBPREFIX)@DDS@$(SOSUFFIX)
else
export DDSSONAME     = 
endif
else
export DDSDLL		=
export DDSSTATICLIB	=
export DDSLIB		=
export LINKDDS      	=
endif
DDSBUILDDIRS	= dds

#
# GIST
#

GISTHDR0 = \
	drawingcursor.hh drawingcursor.hpp \
	gist.hpp gecodelogo.hh node.hh node.hpp \
	nodecursor.hh nodecursor.hpp nodevisitor.hh \
	nodevisitor.hpp layoutcursor.hh layoutcursor.hpp \
	spacenode.hh spacenode.hpp textoutput.hh treecanvas.hh zoomToFitIcon.hpp \
	visualnode.hh visualnode.hpp \
	mainwindow.hh preferences.hh \
	addchild.hh addvisualisationdialog.hh \
	ui_addchild.hh ui_addvisualisationdialog.hh\
	config.hh \
	visualisation/vararrayview.hh visualisation/vararrayviewt.hh \
	visualisation/vararrayitem.hh visualisation/varitem.hh \
	visualisation/intvaritem.hh \
	visualisation/setvaritem.hh

GISTSRC0 = \
	drawingcursor.cpp gist.cpp gecodelogo.cpp node.cpp nodecursor.cpp \
	layoutcursor.cpp spacenode.cpp \
	textoutput.cpp treecanvas.cpp visualnode.cpp \
	mainwindow.cpp preferences.cpp \
	addchild.cpp addvisualisationdialog.cpp \
	config.cpp \
	visualisation/vararrayview.cpp \
	visualisation/varitem.cpp \
	visualisation/intvaritem.cpp \
	visualisation/setvaritem.cpp

GISTMOCSRC0 = \
	moc_treecanvas.cpp moc_mainwindow.cpp moc_preferences.cpp \
	moc_addchild.cpp moc_addvisualisationdialog.cpp \
	visualisation/moc_vararrayview.cpp

GISTSRC = $(GISTSRC0:%=gecode/gist/%)
GISTMOCSRC = $(GISTMOCSRC0:%=gecode/gist/%)
GISTHDR = $(GISTHDR0:%=gecode/gist/%) gecode/gist.hh

GISTOBJ	= $(GISTSRC:%.cpp=%$(OBJSUFFIX)) $(GISTMOCSRC:%.cpp=%$(OBJSUFFIX))
GISTSBJ	= $(GISTSRC:%.cpp=%$(SBJSUFFIX)) $(GISTMOCSRC:%.cpp=%$(SBJSUFFIX))

GISTBUILDDIRS = gist gist/visualisation

ifeq "@enable_gist@" "yes"
export GISTDLL		= $(LIBPREFIX)@GIST@$(DLLSUFFIX)
export GISTSTATICLIB	= $(LIBPREFIX)@GIST@$(STATICLIBSUFFIX)
export GISTLIB		= $(LIBPREFIX)@GIST@$(LIBSUFFIX)
export LINKGIST      	= $(LINKPREFIX)@GIST@$(LINKSUFFIX)
ifeq "@need_soname@" "yes"
export GISTSONAME     = \
	@WLSONAME@$(LIBPREFIX)@GIST@$(SOSUFFIX)
else
export GISTSONAME     = 
endif

else
export GISTDLL		=
export GISTSTATICLIB	=
export GISTLIB		=
export LINKGIST      	=
export GISTSONAME	= 
endif

#
# EXAMPLES
#

INTEXAMPLESRC0 =						\
	alpha bacp bibd donald					\
	eq20 golomb-ruler tsp					\
	graph-color grocery ind-set knights			\
	magic-sequence magic-square				\
	money ortho-latin perfect-square			\
	partition photo queens					\
	sudoku kakuro nonogram pentominoes			\
	crowded-chess black-hole minesweeper domino		\
	steel-mill sports-league all-interval			\
	langford-number warehouses				\
	stress-domain stress-exec stress-search baseline	\
	stress-element stress-min stress-distinct		\
	stress-extensional stress-linear-bool sat

INTEXAMPLESRC  = $(INTEXAMPLESRC0:%=examples/%.cpp)
INTEXAMPLEOBJ  = $(INTEXAMPLESRC:%.cpp=%$(OBJSUFFIX))
INTEXAMPLESBJ  = $(INTEXAMPLESRC:%.cpp=%$(SBJSUFFIX))
ifeq "@enable_int_vars@" "yes"
INTEXAMPLEEXE  = $(INTEXAMPLESRC:%.cpp=%$(EXESUFFIX))
else
INTEXAMPLEEXE  =
endif

SETEXAMPLESRC0 = \
	crew golf hamming steiner queen-armies
SETEXAMPLESRC  = $(SETEXAMPLESRC0:%=examples/%.cpp)
SETEXAMPLEOBJ  = $(SETEXAMPLESRC:%.cpp=%$(OBJSUFFIX))
SETEXAMPLESBJ  = $(SETEXAMPLESRC:%.cpp=%$(SBJSUFFIX))
ifeq "@enable_set_vars@" "yes"
SETEXAMPLEEXE  = $(SETEXAMPLESRC:%.cpp=%$(EXESUFFIX))
else
SETEXAMPLEEXE  = 
endif

CPLTSETEXAMPLESRC0 = \
CPLTSETEXAMPLESRC  = $(CPLTSETEXAMPLESRC0:%=examples/%.cpp)
CPLTSETEXAMPLEOBJ  = $(CPLTSETEXAMPLESRC:%.cpp=%$(OBJSUFFIX))
CPLTSETEXAMPLESBJ  = $(CPLTSETEXAMPLESRC:%.cpp=%$(SBJSUFFIX))
ifeq "@enable_cpltset_vars@" "yes"
CPLTSETEXAMPLEEXE  = $(CPLTSETEXAMPLESRC:%.cpp=%$(EXESUFFIX))
else
CPLTSETEXAMPLEEXE  =
endif

JSEXAMPLESRC0 = javascript
JSEXAMPLESRC  = $(JSEXAMPLESRC0:%=examples/%.cpp)
JSEXAMPLEOBJ  = $(JSEXAMPLESRC:%.cpp=%$(OBJSUFFIX))
JSEXAMPLESBJ  = $(JSEXAMPLESRC:%.cpp=%$(SBJSUFFIX))
ifeq "@enable_qt@" "yes"
JSEXAMPLEEXE  = $(JSEXAMPLESRC:%.cpp=%$(EXESUFFIX))
else
JSEXAMPLEEXE  =
endif

EXAMPLEBUILDDIRS = examples examples/support

EXAMPLEEXE = \
  $(INTEXAMPLEEXE) $(SETEXAMPLEEXE) $(CPLTSETEXAMPLEEXE) $(JSEXAMPLEEXE)

EXSUPPORTSRC0 = \
	support/options support/example
EXSUPPORTHDR0 = \
	support.hh support/options.hpp support/example.hpp
EXSUPPORTSRC = 	$(EXSUPPORTSRC0:%=examples/%.cpp)
EXSUPPORTHDR  = $(EXSUPPORTHDR0:%=examples/%)
export EXSUPPORTOBJ = $(EXSUPPORTSRC:%.cpp=%$(OBJSUFFIX))
EXSUPPORTSBJ = $(EXSUPPORTSRC:%.cpp=%$(SBJSUFFIX))


#
# COLLECTING ALL
#

ALLSRC = \
	$(SUPPORTSRC) $(BUDDYSRC) $(KERNELSRC) $(SEARCHSRC) \
        $(INTSRC) $(SETSRC) $(CPLTSETSRC) $(MMSRC) $(SCHEDSRC) \
	$(SERSRC) $(DDSSRC) \
	$(INTEXAMPLESRC) $(SETEXAMPLESRC) $(CPLTSETEXAMPLESRC) \
	$(JSEXAMPLESRC) $(EXSUPPORTSRC) $(GISTSRC)
ALLHDR = \
	$(SUPPORTHDR) $(KERNELHDR) $(SEARCHHDR) \
        $(INTHDR) $(SETHDR) $(CPLTSETHDR) $(MMHDR) $(SCHEDHDR) \
	$(SERHDR) $(DDSHDR) \
	$(ITERHDR) $(GISTHDR)
ALLOBJ0 = $(ALLSRC:%.cpp=%$(OBJSUFFIX)) \
	$(GISTMOCSRC:%.cpp=%$(OBJSUFFIX)) \
	$(SERMOCSRC:%.cpp=%$(OBJSUFFIX))
ALLOBJ  = $(ALLOBJ0:%.c=%$(OBJSUFFIX))
ALLSBJ0 = $(ALLSRC:%.cpp=%$(SBJSUFFIX))
ALLSBJ  = $(ALLSBJ0:%.c=%$(SBJSUFFIX))

ifeq "@BUILDDLL@" "yes"
DLLTARGETS= \
	$(SUPPORTDLL) $(KERNELDLL) $(SEARCHDLL) $(INTDLL) $(SETDLL) \
	$(CPLTSETDLL) $(MMDLL) $(SCHEDDLL) $(SERDLL) $(GISTDLL) $(DDSDLL)
export ALLLIB = \
	$(SUPPORTLIB) $(KERNELLIB) $(SEARCHLIB) $(INTLIB) $(SETLIB) \
	$(CPLTSETLIB) $(MMLIB) $(SCHEDLIB) $(SERLIB) $(GISTLIB) $(DDSLIB)
else
DLLTARGETS=
export ALLLIB = \
	$(SUPPORTSTATICLIB) $(KERNELSTATICLIB) $(SEARCHSTATICLIB) \
	$(INTSTATICLIB) $(SETSTATICLIB) $(CPLTSETSTATICLIB) \
	$(MMSTATICLIB) $(SCHEDSTATICLIB) $(SERSTATICLIB) \
	$(GISTSTATICLIB) $(DDSSTATICLIB)
endif

ifeq "@BUILDSTATIC@" "yes"
STATICTARGETS = \
	$(SUPPORTSTATICLIB) $(KERNELSTATICLIB) $(SEARCHSTATICLIB) \
	$(INTSTATICLIB) $(SETSTATICLIB) $(CPLTSETSTATICLIB) \
	$(MMSTATICLIB) $(SCHEDSTATICLIB) $(SERSTATICLIB) \
	$(GISTSTATICLIB) $(DDSSTATICLIB)
else
STATICTARGETS=
endif

export LIBTARGETS = $(DLLTARGETS) $(STATICTARGETS)

ifeq "@need_soname@" "yes"
export LIBLINKTARGETS = \
	$(DLLTARGETS:%$(DLLSUFFIX)=%$(SOSUFFIX)) \
	$(DLLTARGETS:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
else
export LIBLINKTARGETS =
endif

PDBS = $(ALLLIB:%$(LIBSUFFIX)=%$(PDBSUFFIX))

ifeq "@INSTALLLIBS@" "yes"
LIBLIBTARGETS = $(ALLLIB) $(PDBS)
else
LIBLIBTARGETS =
endif

#
# Testing
#

INTTESTSRC00 = \
	channel arithmetic basic bool count dom distinct element extensional \
	rel linear scheduling gcc sorted circuit unshare \
	mm-arithmetic mm-bool mm-lin mm-count mm-rel
INTTESTSRC0 = test/int.cpp $(INTTESTSRC00:%=test/int/%.cpp)
INTTESTOBJ = $(INTTESTSRC0:%.cpp=%$(OBJSUFFIX))
SETTESTSRC00 = \
	dom rel rel-op rel-op-const convex sequence int select distinct projection 
SETTESTSRC0 = test/set.cpp $(SETTESTSRC00:%=test/set/%.cpp)
CPLTSETTESTSRC00 = \
	dom rel atmost partition cardinality select
CPLTSETTESTSRC0 = test/cpltset.cpp $(CPLTSETTESTSRC00:%=test/cpltset/%.cpp)

ifeq "@enable_set_vars@" "yes"
SETTESTOBJ = $(SETTESTSRC0:%.cpp=%$(OBJSUFFIX))
else
SETTESTOBJ=
endif
ifeq "@enable_cpltset_vars@" "yes"
CPLTSETTESTOBJ = $(CPLTSETTESTSRC0:%.cpp=%$(OBJSUFFIX))
else
CPLTSETTESTOBJ =
endif

BRANCHTESTSRC0 = \
	test/branch.cpp test/branch/int.cpp test/branch/bool.cpp \
	test/branch/set.cpp test/branch/cpltset.cpp \
	test/assign.cpp test/assign/int.cpp test/assign/bool.cpp

SEARCHTESTSRC0 = \
	test/search.cpp

TESTSRC0 = test/test.cpp

TESTSRC = \
	$(TESTSRC0) $(INTTESTSRC0) \
	$(SETTESTSRC0) $(CPLTSETTESTSRC0) \
	$(BRANCHTESTSRC0) $(SEARCHTESTSRC0)

TESTHDR0 = \
	test.hh test.hpp int.hh int.hpp set.hh set.hpp cpltset.hh \
	branch.hh assign.hh
TESTHDR = $(TESTHDR0:%=test/%)
TESTOBJ	= $(INTTESTOBJ) $(SETTESTOBJ) $(CPLTSETTESTOBJ) \
	$(BRANCHTESTSRC0:%.cpp=%$(OBJSUFFIX)) \
	$(SEARCHTESTSRC0:%.cpp=%$(OBJSUFFIX)) \
	$(TESTSRC0:%.cpp=%$(OBJSUFFIX))
TESTSBJ	= $(TESTOBJ:%$(OBJSUFFIX)=%$(SBJSUFFIX))
TESTEXE	= test/test$(EXESUFFIX)
TESTBUILDDIRS = test test/int test/set test/branch test/cpltset test/assign

BUILDDIRS = \
	$(SUPPORTBUILDDIRS:%=gecode/%) \
	$(KERNELBUILDDIRS:%=gecode/%) $(SEARCHBUILDDIRS:%=gecode/%) \
	$(INTBUILDDIRS:%=gecode/%) $(SETBUILDDIRS:%=gecode/%) \
	$(CPLTSETBUILDDIRS:%=gecode/%) \
	$(SERBUILDDIRS:%=gecode/%) \
	$(DDSBUILDDIRS:%=gecode/%) \
	$(MMBUILDDIRS:%=gecode/%)  \
	$(SCHEDBUILDDIRS:%=gecode/%) \
	$(GISTBUILDDIRS:%=gecode/%) \
	$(EXAMPLEBUILDDIRS) $(TESTBUILDDIRS)

ifeq "@enable_examples@" "yes"
all: compilelib
	@$(MAKE) compileexamples
	@$(MAKE) makecompletedmessage
else
all: compilelib
	@$(MAKE) makecompletedmessage
endif
compilelib: mkcompiledirs
	@$(MAKE) $(VARIMP:%=$(top_srcdir)/%) $(LIBTARGETS)
	@$(MAKE) compilesubdirs
	@$(MAKE) framework

compileexamples: $(EXAMPLEEXE)

test: mkcompiledirs
	@$(MAKE) $(VARIMP:%=$(top_srcdir)/%) $(TESTEXE)

# A basic integrity test
check: test
	$(TESTEXE) -iter 2 -test Branch::Int::Dense::3 \
			   -test Int::Linear::Int::Int::Eq::Bnd::12::4 \
			   -test Int::Distinct::Random \
			   -test Int::Arithmetic::Mult::XYZ::Bnd::C \
			   -test Int::Arithmetic::Mult::XYZ::Dom::A \
			   -test Search::BAB::Sol::BalGr::Binary::Binary::Binary::1::1

ifeq "@top_srcdir@" "."
mkcompiledirs:
else
mkcompiledirs:
	for_builddirs="$(BUILDDIRS)"; for f in $$for_builddirs; do \
	  (test -z "$(top_builddir)"/$$f || mkdir -p "$(top_builddir)"/$$f); \
	done
endif

makecompletedmessage:
	@echo
	@echo Compilation of Gecode finished successfully. To use Gecode, either add
	@echo $(PWD)
	@echo to your search path for libraries, or install Gecode using
	@echo make install
	@echo

# ugly hack by Gr�goire Dooms to call a target on a contribs after evaluating all the variables in this Makefile.
# used as make contribs:cpgraph:doc or make contribs:cpgraph:Makefile.in
.PHONY: contribs\:%
contribs\:%:
	$(MAKE) -C $(shell echo $@ | sed 's/\(contribs:[^:]*\):.*/\1/;s+:+/+') $(shell echo $@ | sed 's/contribs:[^:]*:\(.*\)/\1/;s+:+/+')

# less ugly hack by Guido Tack to call a target
# Just give ICD (in-contrib-dir) and ICT (in-contrib-target) as arguments
# to make incontrib
ICT=
ICD=
.PHONY: incontrib
incontrib:
	$(MAKE) -C contribs/$(ICD) $(ICT)

compilesubdirs:
	@for_subdirs="$(subdirs)"; for i in $$for_subdirs; do \
	  if test -f $$i/Makefile; then \
	    echo "Making in directory $$i"; \
	    $(MAKE) -C $$i; \
	  fi; \
	done

#
# Generated variable implementations
#

ALLVIS0 = \
	gecode/int/var-imp/int \
	gecode/int/var-imp/bool \
	gecode/set/var-imp/set \
	gecode/cpltset/var-imp/cpltset
ALLVIS = \
	$(ALLVIS0:%=$(top_srcdir)/%.vis) \
	$(top_srcdir)/misc/genvariables.perl

$(top_srcdir)/gecode/kernel/var-type.hpp: $(top_srcdir)/variables.vsl $(ALLVIS)
	perl $(top_srcdir)/misc/genvariables.perl -typehpp $< > $@
$(top_srcdir)/gecode/kernel/var-type.cpp: $(top_srcdir)/variables.vsl $(ALLVIS)
	perl $(top_srcdir)/misc/genvariables.perl -typecpp $< > $@
$(top_srcdir)/gecode/kernel/var-imp.hpp: $(top_srcdir)/variables.vsl $(ALLVIS)
	perl $(top_srcdir)/misc/genvariables.perl -header $< > $@

#
# Generated branchings
#
GENBRANCHSRC = \
	$(top_srcdir)/gecode/int/branch/post-view-int.cpp \
	$(top_srcdir)/gecode/int/branch/post-view-bool.cpp \
	$(top_srcdir)/gecode/set/branch.cpp \
	$(top_srcdir)/gecode/cpltset/branch.cpp

$(top_srcdir)/gecode/int/branch/post-view-int.cpp: \
	$(top_srcdir)/gecode/int/branch/post-view-int.bs \
	$(top_srcdir)/misc/genbranch.perl
	perl $(top_srcdir)/misc/genbranch.perl $< > $@
$(top_srcdir)/gecode/int/branch/post-view-bool.cpp: \
	$(top_srcdir)/gecode/int/branch/post-view-bool.bs \
	$(top_srcdir)/misc/genbranch.perl
	perl $(top_srcdir)/misc/genbranch.perl $< > $@
$(top_srcdir)/gecode/set/branch.cpp: \
	$(top_srcdir)/gecode/set/branch/post-view.bs \
	$(top_srcdir)/misc/genbranch.perl
	perl $(top_srcdir)/misc/genbranch.perl $< > $@
$(top_srcdir)/gecode/cpltset/branch.cpp: \
	$(top_srcdir)/gecode/cpltset/branch/post-view.bs \
	$(top_srcdir)/misc/genbranch.perl
	perl $(top_srcdir)/misc/genbranch.perl $< > $@

#
# Registry of post functions
#

POSTHDR = $(POSTINT) $(POSTSET)

$(top_srcdir)/gecode/serialization/register.cpp: \
	$(top_srcdir)/gecode/int.hh \
	$(top_srcdir)/gecode/set.hh \
	$(top_srcdir)/gecode/minimodel.hh \
	$(top_srcdir)/gecode/scheduling.hh \
	$(top_srcdir)/misc/genregistry.perl
	(cd $(top_srcdir) && \
	 perl misc/genregistry.perl \
	  gecode/int.hh gecode/set.hh gecode/minimodel.hh \
	  > gecode/serialization/register.cpp 2>/dev/null)


#
# Object targets
#

gecode/support/%$(OBJSUFFIX): $(top_srcdir)/gecode/support/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SUPPORT_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/support/%$(SBJSUFFIX): $(top_srcdir)/gecode/support/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SUPPORT_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<
gecode/support/%$(OBJSUFFIX): $(top_srcdir)/gecode/support/%.c
	$(CC) $(CFLAGS) @GECODE_BUILD_SUPPORT_FLAG@ \
	@COMPILEOBJ@$@ @CCIN@$<
gecode/support/%$(SBJSUFFIX): $(top_srcdir)/gecode/support/%.c
	$(CC) $(CFLAGS) @GECODE_BUILD_SUPPORT_FLAG@ \
	@COMPILESBJ@$@ @CCIN@$<

gecode/kernel/%$(OBJSUFFIX): $(top_srcdir)/gecode/kernel/%.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_CPPFLAGS) @GECODE_BUILD_KERNEL_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/kernel/%$(SBJSUFFIX): $(top_srcdir)/gecode/kernel/%.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_CPPFLAGS) @GECODE_BUILD_KERNEL_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/search/%$(OBJSUFFIX): $(top_srcdir)/gecode/search/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SEARCH_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/search/%$(SBJSUFFIX): $(top_srcdir)/gecode/search/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SEARCH_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/int/%$(OBJSUFFIX): $(top_srcdir)/gecode/int/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_INT_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/int/%$(SBJSUFFIX): $(top_srcdir)/gecode/int/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_INT_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/set/%$(OBJSUFFIX): $(top_srcdir)/gecode/set/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SET_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/set/%$(SBJSUFFIX): $(top_srcdir)/gecode/set/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SET_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/cpltset/%$(OBJSUFFIX): $(top_srcdir)/gecode/cpltset/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_CPLTSET_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/cpltset/%$(SBJSUFFIX): $(top_srcdir)/gecode/cpltset/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_CPLTSET_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/minimodel/%$(OBJSUFFIX): $(top_srcdir)/gecode/minimodel/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_MINIMODEL_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/minimodel/%$(SBJSUFFIX): $(top_srcdir)/gecode/minimodel/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_MINIMODEL_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/scheduling/%$(OBJSUFFIX): $(top_srcdir)/gecode/scheduling/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SCHEDULING_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/scheduling/%$(SBJSUFFIX): $(top_srcdir)/gecode/scheduling/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_SCHEDULING_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/dds/%$(OBJSUFFIX): $(top_srcdir)/gecode/dds/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_DDS_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/dds/%$(SBJSUFFIX): $(top_srcdir)/gecode/dds/%.cpp
	$(CXX) $(CXXFLAGS) @GECODE_BUILD_DDS_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<

gecode/serialization/%$(OBJSUFFIX): $(top_srcdir)/gecode/serialization/%.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_CPPFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_SERIALIZATION_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
gecode/serialization/%$(SBJSUFFIX): $(top_srcdir)/gecode/serialization/%.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_CPPFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_SERIALIZATION_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<
gecode/serialization/moc_%$(OBJSUFFIX): gecode/serialization/moc_%.cpp
	$(CXX) $(CXXFLAGS) $(BOOST_CPPFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_SERIALIZATION_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<
.PRECIOUS: gecode/serialization/moc_%.cpp
gecode/serialization/moc_%.cpp: $(top_srcdir)/gecode/serialization/%.hh
	$(MOC) $(CPPFLAGS) -pgecode/serialization $< -o $@

examples/%$(OBJSUFFIX): $(top_srcdir)/examples/%.cpp
	$(CXX) $(CXXFLAGS) $(EXAMPLES_EXTRA_CXXFLAGS) $(BOOST_CPPFLAGS) \
	@COMPILEOBJ@$@ @CXXIN@$<
examples/%$(SBJSUFFIX): $(top_srcdir)/examples/%.cpp
	$(CXX) $(CXXFLAGS) $(EXAMPLES_EXTRA_CXXFLAGS) \
	@COMPILESBJ@$@ @CXXIN@$<


test/%$(OBJSUFFIX): $(top_srcdir)/test/%.cpp
	$(CXX) $(CXXFLAGS) $(EXAMPLES_EXTRA_CXXFLAGS) \
		@COMPILEOBJ@$@ @CXXIN@$<
test/%$(SBJSUFFIX): $(top_srcdir)/test/%.cpp
	$(CXX) $(CXXFLAGS) $(EXAMPLES_EXTRA_CXXFLAGS) \
		@COMPILESBJ@$@ @CXXIN@$<

gecode/gist/%$(OBJSUFFIX): $(top_srcdir)/gecode/gist/%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<

gecode/gist/%$(SBJSUFFIX): $(top_srcdir)/gecode/gist/%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<
gecode/gist/moc_%$(OBJSUFFIX): gecode/gist/moc_%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<

.PRECIOUS: gecode/gist/moc_%.cpp
gecode/gist/moc_%.cpp: $(top_srcdir)/gecode/gist/%.hh
	$(MOC) $(CPPFLAGS) -pgecode/gist $< -o $@

gecode/gist/visualisation/%$(OBJSUFFIX): $(top_srcdir)/gecode/gist/visualisation/%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<

gecode/gist/visualisation/%$(SBJSUFFIX): $(top_srcdir)/gecode/gist/visualisation/%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILESBJ@$@ @CXXIN@$<
gecode/gist/visualisation/moc_%$(OBJSUFFIX): gecode/gist/visualisation/moc_%.cpp
	$(CXX) $(CXXFLAGS) $(QT_CPPFLAGS) \
	@GECODE_BUILD_GIST_FLAG@ \
	@COMPILEOBJ@$@ @CXXIN@$<

.PRECIOUS: gecode/gist/visualisation/moc_%.cpp
gecode/gist/visualisation/moc_%.cpp: $(top_srcdir)/gecode/gist/visualisation/%.hh
	$(MOC) $(CPPFLAGS) -pgecode/gist/visualisation $< -o $@

#
# DLL Targets
#

ifeq "$(DLLSUFFIX)" "$(LIBSUFFIX)"
export LINKALL = \
	$(LINKGIST) $(LINKSEARCH) $(LINKMM) $(LINKSCHED) $(LINKDDS) \
	$(LINKSER) $(LINKCPLTSET) $(LINKSET) $(LINKINT) \
	$(LINKKERNEL) $(LINKSUPPORT)
$(SUPPORTDLL): $(SUPPORTOBJ)
	$(CXX) $(DLLFLAGS) $(SUPPORTOBJ) $(SUPPORTSONAME) \
		@LINKOUTPUT@$(SUPPORTDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(KERNELDLL): $(KERNELOBJ) $(SUPPORTDLL)
	$(CXX) $(DLLFLAGS) $(KERNELOBJ) $(KERNELSONAME) \
		@DLLPATH@ $(LINKSUPPORT) \
		@LINKOUTPUT@$(KERNELDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(SEARCHDLL): $(SEARCHOBJ) $(SUPPORTDLL) $(KERNELDLL)
	$(CXX) $(DLLFLAGS) $(SEARCHOBJ) $(SEARCHSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) \
		@LINKOUTPUT@$(SEARCHDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(INTDLL): $(INTOBJ) $(SUPPORTDLL) $(KERNELDLL)
	$(CXX) $(DLLFLAGS) $(INTOBJ) $(INTSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) \
		@LINKOUTPUT@$(INTDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(SETDLL): $(SETOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(SETOBJ) $(SETSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		@LINKOUTPUT@$(SETDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(CPLTSETDLL): $(CPLTSETOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL) $(SETDLL)
	$(CXX) $(DLLFLAGS) $(CPLTSETOBJ) $(CPLTSETSONAME)  \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		$(LINKSET)\
		@LINKOUTPUT@$(CPLTSETDLL) 
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(MMDLL): $(MMOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(MMOBJ) $(MMSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		@LINKOUTPUT@$(MMDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(SCHEDDLL): $(SCHEDOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(SCHEDOBJ) $(SCHEDSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		@LINKOUTPUT@$(SCHEDDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(DDSDLL): $(DDSOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(DDSOBJ) $(DDSSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		@LINKOUTPUT@$(DDSDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(SERDLL): $(SEROBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL) $(SETDLL) $(CPLTSETDLL) $(MMDLL) $(SCHEDDLL)
	$(CXX) $(DLLFLAGS) $(SEROBJ) $(SERSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKINT) \
		$(LINKSET) $(LINKMM) $(SCHEDDLL) $(BOOST_LINK) $(LINKQT) \
		@LINKOUTPUT@$(SERDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
$(GISTDLL): $(GISTOBJ) $(SUPPORTDLL) $(KERNELDLL) $(SEARCHDLL) $(INTDLL) $(DDSDLL)
	$(CXX) $(DLLFLAGS) $(GISTOBJ) $(GISTSONAME) \
		@DLLPATH@ $(LINKSUPPORT) $(LINKKERNEL) $(LINKSEARCH) $(LINKINT) $(LINKDDS) $(LINKQT) \
		@LINKOUTPUT@$(GISTDLL)
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOLINKSUFFIX))
	$(CREATELINK) $@ $(@:%$(DLLSUFFIX)=%$(SOSUFFIX))
else
export LINKALL =
$(SUPPORTDLL) $(SUPPORTLIB): $(SUPPORTOBJ)
	$(CXX) $(DLLFLAGS) $(SUPPORTOBJ) \
		@LINKOUTPUT@$(SUPPORTDLL) $(GLDFLAGS) 
$(KERNELDLL) $(KERNELLIB): $(KERNELOBJ) $(SUPPORTDLL)
	$(CXX) $(DLLFLAGS) $(KERNELOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(KERNELDLL) $(GLDFLAGS) 
$(SEARCHDLL) $(SEARCHLIB): $(SEARCHOBJ) $(SUPPORTDLL) $(KERNELDLL)
	$(CXX) $(DLLFLAGS) $(SEARCHOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(SEARCHDLL) $(GLDFLAGS) 
$(INTDLL) $(INTLIB): $(INTOBJ) $(SUPPORTDLL) $(KERNELDLL)
	$(CXX) $(DLLFLAGS) $(INTOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(INTDLL) $(GLDFLAGS) 
$(SETDLL) $(SETLIB): $(SETOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(SETOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(SETDLL) $(GLDFLAGS) 
$(CPLTSETDLL) $(CPLTSETLIB): $(CPLTSETOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL) $(SETDLL)
	$(CXX) $(DLLFLAGS) $(CPLTSETOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(CPLTSETDLL) $(GLDFLAGS) 
$(MMDLL) $(MMLIB): $(MMOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(MMOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(MMDLL) $(GLDFLAGS)
$(SCHEDDLL) $(SCHEDLIB): $(SCHEDOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(SCHEDOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(SCHEDDLL) $(GLDFLAGS)
$(DDSDLL) $(DDSLIB): $(DDSOBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL)
	$(CXX) $(DLLFLAGS) $(DDSOBJ) \
		@DLLPATH@ @LINKOUTPUT@$(DDSDLL) $(GLDFLAGS)
$(SERDLL) $(SERLIB): $(SEROBJ) $(SUPPORTDLL) $(KERNELDLL) $(INTDLL) $(SETDLL) $(CPLTSETDLL) $(MMDLL) $(SCHEDDLL)
	$(CXX) $(DLLFLAGS) $(SEROBJ) \
		@DLLPATH@ $(BOOST_LINK) $(LINKQT) \
		@LINKOUTPUT@$(SERDLL) $(GLDFLAGS)
$(GISTDLL) $(GISTLIB): $(GISTOBJ) $(SUPPORTDLL) $(KERNELDLL) $(SEARCHDLL) $(INTDLL) $(DDSDLL)
	$(CXX) $(DLLFLAGS) $(GISTOBJ) $(GISTSONAME) \
		@DLLPATH@ $(LINKQT) \
		@LINKOUTPUT@$(GISTDLL) $(GLDFLAGS)
endif

#
# Static libraries
#

$(SUPPORTSTATICLIB): $(SUPPORTOBJ)
	$(AR) $(ARFLAGS) $@ $(SUPPORTOBJ)
	$(RANLIB) $@
$(KERNELSTATICLIB): $(KERNELOBJ)
	$(AR) $(ARFLAGS) $@ $(KERNELOBJ)
	$(RANLIB) $@
$(SEARCHSTATICLIB): $(SEARCHOBJ)
	$(AR) $(ARFLAGS) $@ $(SEARCHOBJ)
	$(RANLIB) $@
$(INTSTATICLIB): $(INTOBJ)
	$(AR) $(ARFLAGS) $@ $(INTOBJ)
	$(RANLIB) $@
$(SETSTATICLIB): $(SETOBJ)
	$(AR) $(ARFLAGS) $@ $(SETOBJ)
	$(RANLIB) $@
$(CPLTSETSTATICLIB): $(CPLTSETOBJ)
	$(AR) $(ARFLAGS) $@ $(CPLTSETOBJ)
	$(RANLIB) $@
$(MMSTATICLIB): $(MMOBJ)
	$(AR) $(ARFLAGS) $@ $(MMOBJ)
	$(RANLIB) $@
$(SCHEDSTATICLIB): $(SCHEDOBJ)
	$(AR) $(ARFLAGS) $@ $(SCHEDOBJ)
	$(RANLIB) $@
$(DDSSTATICLIB): $(DDSOBJ)
	$(AR) $(ARFLAGS) $@ $(DDSOBJ)
	$(RANLIB) $@
$(SERSTATICLIB): $(SEROBJ)
	$(AR) $(ARFLAGS) $@ $(SEROBJ)
	$(RANLIB) $@
$(GISTSTATICLIB): $(GISTOBJ)
	$(AR) $(ARFLAGS) $@ $(GISTOBJ)
	$(RANLIB) $@

#
# Mac OS X Framework
#

.PHONY: framework
ifeq "@BUILD_MACOS_FRAMEWORK@" "yes"
framework: $(STATICTARGETS)
	$(RMF) gecode.framework
	mkdir -p gecode.framework/Versions/@GECODE_SOVERSION@
	$(CXX) -all_load -compatibility_version @GECODE_SOVERSION@.0 \
	  -current_version @GECODE_SOVERSION@.0 \
	  -install_name /Library/Frameworks/gecode.framework/Versions/@GECODE_SOVERSION@/gecode \
	  $(DLLFLAGS) $(LINKQT) \
	  -o gecode.framework/Versions/@GECODE_SOVERSION@/gecode $^
	$(MAKE) doinstallheaders \
	  prefix=gecode.framework/Versions/@GECODE_SOVERSION@ DESTDIR=
	mv gecode.framework/Versions/@GECODE_SOVERSION@/include/gecode/* \
	  gecode.framework/Versions/@GECODE_SOVERSION@/include/
	rmdir gecode.framework/Versions/@GECODE_SOVERSION@/include/gecode
	cd gecode.framework/Versions && ln -s @GECODE_SOVERSION@ Current
	ln -s Versions/Current/include \
	  gecode.framework/Headers
	ln -s Versions/Current/gecode \
	  gecode.framework/gecode
else
framework:
endif

#
# EXE Targets
#

.PRECIOUS: examples/%$(OBJSUFFIX)
examples/%$(EXESUFFIX): examples/%$(OBJSUFFIX) $(EXSUPPORTOBJ) $(ALLLIB)
	$(CXX) @EXEOUTPUT@$@ $< $(EXSUPPORTOBJ) $(DLLPATH) $(CXXFLAGS) \
	$(LINKALL) $(GLDFLAGS)

$(TESTEXE): $(TESTOBJ) $(ALLLIB) 
	$(CXX) @EXEOUTPUT@$@ $(TESTOBJ) $(DLLPATH) $(CXXFLAGS) \
	$(LINKALL) $(GLDFLAGS)



#
# Autoconf
#

$(top_srcdir)/configure: $(top_srcdir)/configure.ac
	(cd $(top_srcdir) && autoconf)
config.status: $(top_srcdir)/configure
	./config.status --recheck
Makefile: $(top_srcdir)/Makefile.in config.status
	./config.status --file $@:$<
doxygen.hh: $(top_srcdir)/doxygen/doxygen.hh.in config.status
	./config.status --file $@:$<

#
# Source distribution
#

DIST_FILES= \
	configure.ac configure Makefile.in gecode.m4 \
	changelog.in LICENSE \
	doxygen/doxygen.conf.in doxygen/doxygen.hh.in doxygen/reflection.hh \
	install-sh \
	misc/gecode.pc.in \
	misc/gecode-search.pc.in  misc/gecode-minimodel.pc.in \
	misc/gecode-serialization.pc.in misc/gecode-gist.pc.in \
	gecode/support/config.hpp.in \
	variables.vsl \
	gecode/int/var-imp/int.vis \
	gecode/int/var-imp/bool.vis \
	gecode/set/var-imp/set.vis \
	gecode/cpltset/var-imp/cpltset.vis \
	gecode/int/branch/post-view-int.bs \
	gecode/int/branch/post-view-bool.bs \
	gecode/set/branch/post-view.bs \
	gecode/cpltset/branch/post-view.bs \
	gecode/support/buddy/AUTHORS \
	gecode/support/buddy/ChangeLog \
	gecode/support/buddy/NEWS \
	gecode/support/buddy/README \
	examples/support.hh \
	examples/support/example.hpp \
	examples/support/options.hpp \
	misc/doxygen/back.png misc/doxygen/gecode-logo-100.png \
	misc/doxygen/stylesheet.css misc/doxygen/footer.html \
	misc/doxygen/header.html misc/genlicense.perl \
	misc/genstatistics.perl misc/getrevision.perl \
	misc/genchangelog.perl misc/genvariables.perl \
	misc/gentxtchangelog.perl misc/makedepend.perl \
	misc/genbranch.perl misc/genregistry.perl \
	misc/AppleHelpbookInfo.plist

distdir:
	rm -rf gecode-$(VERSION) && \
	mkdir -p gecode-$(VERSION) && \
	(cd $(top_srcdir) && tar cf - $(ALLHDR) $(ALLSRC)) | \
	  (cd gecode-$(VERSION) && tar xf -) && \
	(cd $(top_srcdir) && tar cf - $(TESTSRC) $(TESTHDR) $(DIST_FILES)) | \
	  (cd gecode-$(VERSION) && tar xf -)

dist: distdir
	tar chof - gecode-$(VERSION) | gzip -c >gecode-$(VERSION).tar.gz
	rm -rf gecode-$(VERSION)

#
# Documentation
#

export ENABLEDOCCHM	= @ENABLEDOCCHM@
ENABLEDOCSEARCH = @ENABLEDOCSEARCH@

.PHONY: doc

DOCSRC_NOTGENERATED = \
	misc/doxygen/back.png misc/doxygen/footer.html \
	misc/doxygen/gecode-logo-100.png \
	misc/doxygen/stylesheet.css \
	misc/genlicense.perl misc/genstatistics.perl misc/getrevision.perl \
	misc/genchangelog.perl
DOCSRC = $(DOCSRC_NOTGENERATED:%=$(top_srcdir)/%) \
	doxygen.conf.use header.html \
	doxygen.hh license.hh stat.hh changelog.hh

changelog.hh: $(top_srcdir)/changelog.in
	perl $(top_srcdir)/misc/genchangelog.perl < $^ > changelog.hh

ChangeLog: $(top_srcdir)/changelog.in
	perl $(top_srcdir)/misc/gentxtchangelog.perl < $^ > ChangeLog

license.hh: $(ALLHDR:%=$(top_srcdir)/%) $(ALLSRC:%=$(top_srcdir)/%)
	perl $(top_srcdir)/misc/genlicense.perl $^ > license.hh

stat.hh: $(ALLHDR:%=$(top_srcdir)/%) $(ALLSRC:%=$(top_srcdir)/%) \
	$(TESTHDR:%=$(top_srcdir)/%) $(TESTSRC:%=$(top_srcdir)/%)
	perl $(top_srcdir)/misc/genstatistics.perl $^ > stat.hh


ifeq "@ENABLEDOCCHM@" "yes"

DOCTARGET=GecodeReference.chm

header.html: $(top_srcdir)/misc/doxygen/header.html
	grep -v '<form.*form>' < $< > $@
doxygen.conf.use: doxygen.conf
	(echo "GENERATE_HTMLHELP = YES"; \
	 echo "SEARCHENGINE = NO";\
	 echo "HAVE_DOT = @GECODE_DOXYGEN_DOT@") | \
		cat $< - > $@

doc: $(ALLHDR:%=$(top_srcdir)/%) $(ALLSRC:%=$(top_srcdir)/%) $(DOCSRC)
	mkdir -p doc/html
	cp -f $(top_srcdir)/misc/doxygen/back.png \
	$(top_srcdir)/misc/doxygen/gecode-logo-100.png doc/html
	doxygen doxygen.conf.use
	mv doc/html/GecodeReference.chm GecodeReference.chm

else

DOCTARGET=doc/html

ifeq "@ENABLEDOCSEARCH@" "yes"

header.html: $(top_srcdir)/misc/doxygen/header.html
	cat < $< > $@
doxygen.conf.use: doxygen.conf
	(echo "GENERATE_HTMLHELP = NO"; \
	 echo "SEARCHENGINE = YES"; \
	 echo "HAVE_DOT = @GECODE_DOXYGEN_DOT@") | \
		cat $< - > $@
else

header.html: $(top_srcdir)/misc/doxygen/header.html
	grep -v '<form.*form>' < $< > $@
doxygen.conf.use: doxygen.conf
	(echo "GENERATE_HTMLHELP = NO"; \
	 echo "SEARCHENGINE = NO"; \
	 echo "HAVE_DOT = @GECODE_DOXYGEN_DOT@") | \
		cat $< - > $@

endif

doc: $(ALLHDR:%=$(top_srcdir)/%) $(ALLSRC:%=$(top_srcdir)/%) $(DOCSRC)
	mkdir -p doc/html
	cp -f $(top_srcdir)/misc/doxygen/back.png \
	$(top_srcdir)/misc/doxygen/gecode-logo-100.png doc/html
	doxygen doxygen.conf.use

endif


# Generate an indexed Apple HelpBook
# The generated book must then be copied to
# /Library/Documentation/Help
doc-apple: doc
	mkdir -p doc/Gecode.help/Contents/Resources
	rm -rf doc/Gecode.help/Contents/Resources/English.lproj
	cp -r doc/html doc/Gecode.help/Contents/Resources/English.lproj
	cp misc/AppleHelpbookInfo.plist \
	  doc/Gecode.help/Contents/Info.plist
	sed -i -e \
	  's|</title>|</title><META NAME="AppleTitle" CONTENT="Gecode Help">|g' \
	  doc/Gecode.help/Contents/Resources/English.lproj/index.html
	/Developer/Applications/Utilities/Help\ Indexer.app/Contents/MacOS/Help\ Indexer \
	  doc/Gecode.help/Contents/Resources/English.lproj

#
# Installation
#

ifeq "@enable_gist@" "yes"
GIST_PKGCONFIGFILE = gecode-gist.pc
else
GIST_PKGCONFIGFILE = 
endif

ifeq "@HAS_PKGCONFIG@" "yes"
PKGCONFIGFILES = \
	gecode.pc gecode-search.pc gecode-minimodel.pc \
	gecode-serialization.pc $(GIST_PKGCONFIGFILE)
else
PKGCONFIGFILES =
endif

.PHONY: install

ifeq "@BUILD_MACOS_FRAMEWORK@" "yes"
install: installframework
else

ifeq "@enable_examples@" "yes"
install: installlib installexamples
else
install: installlib
endif

endif

doinstallheaders: $(ALLHDR:%=$(top_srcdir)/%) $(EXTRA_HEADERS)
	mkdir -p $(DESTDIR)$(includedir) && \
	(cd $(top_srcdir) && tar cf - $(ALLHDR)) | \
	  (cd $(DESTDIR)$(includedir) && tar xf -) && \
	for_extraheaders="$(EXTRA_HEADERS)" && \
	  for f in $$for_extraheaders; do \
	    cp $$f $(DESTDIR)$(pkgincludedir)/support; done && \
	for_pkgconfigfiles="$(PKGCONFIGFILES)" && \
	  for f in $$for_pkgconfigfiles; do \
	    mkdir -p $(DESTDIR)$(libdir)/pkgconfig; \
	    cp misc/$$f $(DESTDIR)$(libdir)/pkgconfig; \
	  done

doinstalllib: 
	mkdir -p $(DESTDIR)$(sharedlibdir) && \
	mkdir -p $(DESTDIR)$(libdir) && \
	for_libtargets="$(LIBTARGETS)" && \
	  for f in $$for_libtargets; do \
	    cp $$f $(DESTDIR)$(sharedlibdir); done && \
	for_liblinktargets="$(LIBLINKTARGETS)" && \
	  for f in $$for_liblinktargets; do \
	    cp -pR $$f $(DESTDIR)$(sharedlibdir); done &&\
	for_liblibtargets="$(LIBLIBTARGETS)" && \
	  for f in $$for_liblibtargets; do \
	    cp $$f $(DESTDIR)$(libdir); done

ifeq "@BUILDSTATIC@" "yes"
ranliblib:
	for_static="$(STATICTARGETS)" ; \
	  for f in $$for_static; do \
	    $(RANLIB) $(DESTDIR)$(sharedlibdir)/$$f; done
else
ranliblib:
endif

installlib: compilelib
	$(MAKE) doinstalllib
	$(MAKE) doinstallheaders
	$(MAKE) ranliblib
	$(MAKE) installsubdirs

installexamples: compileexamples
	mkdir -p $(DESTDIR)$(bindir); \
	for_exampleexe="$(EXAMPLEEXE)" ; \
	for f in $$for_exampleexe; do cp $$f $(DESTDIR)$(bindir); done \

installframework: framework
	mkdir -p $(DESTDIR)/Library/Frameworks/gecode.framework && \
	(cd gecode.framework && tar cf - *) | \
	(cd $(DESTDIR)/Library/Frameworks/gecode.framework && tar xf -)

installdoc: doc
	mkdir -p $(DESTDIR)$(docdir); \
	cp -r $(DOCTARGET) $(DESTDIR)$(docdir)

installsubdirs:
	@for_subdirs="$(subdirs)" ; for i in $$for_subdirs; do \
	  cd $$i && if test -f Makefile; then \
	    echo "Making install in directory $$i"; \
	    $(MAKE) install; \
	  fi; \
	done

#
# Source Distribution
#

.PHONY: distdoc

ifeq "@ENABLEDOCSEARCH@" "yes"
DOCSUFFIX = search-$(VERSION)
else
DOCSUFFIX = $(VERSION)
endif

distdoc: doc
	rm -rf gecode-doc-$(DOCSUFFIX) && \
	cp -r doc/html . && mv html gecode-doc-$(DOCSUFFIX) && \
	$(TAR) cf - gecode-doc-$(DOCSUFFIX) | \
		gzip -9 > gecode-doc-$(DOCSUFFIX).tar.gz && \
	zip -q -9 -r gecode-doc-$(DOCSUFFIX).zip gecode-doc-$(DOCSUFFIX) && \
	$(RMF) gecode-doc-$(DOCSUFFIX) && \
	if test -f doc/gecode-doc.tag; then \
		mv doc/gecode-doc.tag gecode-doc-$(DOCSUFFIX).tag && \
		gzip -9 gecode-doc-$(DOCSUFFIX).tag; \
	fi


#
# Binary Distribution
#

.PHONY: distzip

BINPKG = gecode-$(VERSION)-bin

disttodir:
	$(RMF) $(BINPKG) && \
	$(MAKE) install \
	prefix=$(BINPKG) execprefix=$(BINPKG) bindir=$(BINPKG)/bin \
	libdir=$(BINPKG)/lib sharedlibdir=$(BINPKG)/lib \
	includedir=$(BINPKG)/include && \
	$(MAKE) ChangeLog && \
	cp $(top_srcdir)/LICENSE ChangeLog $(BINPKG)/

distzip: disttodir
	zip -q -9 -r $(BINPKG).zip $(BINPKG) && \
	$(RMF) $(BINPKG)

disttgz: disttodir
	$(TAR) cf - $(BINPKG) | \
	  gzip -9 > $(BINPKG).tar.gz && \
	$(RMF) $(BINPKG)

#
# Maintenance targets
#

clean:
	$(RMF) *.stackdump core gmon.out vc70.pdb vc80.pdb vc90.pdb
	$(RMF) doxygen.log doxygen.hh doxygen.conf.use stat.hh license.hh header.html
	$(RMF) $(ALLOBJ) $(ALLSBJ) $(ALLOBJ:%$(OBJSUFFIX)=%.pdb)
	$(RMF) $(TESTOBJ) $(TESTSBJ) $(TESTOBJ:%$(OBJSUFFIX)=%.pdb)
	$(RMF) $(GISTMOCSRC) $(SERMOCSRC)
	$(RMF) $(SERREGSRC:%.cpp=%$(OBJSUFFIX))

veryclean: clean
	$(RMF) $(LIBTARGETS) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(MANIFESTSUFFIX)) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(EXPSUFFIX)) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(LIBSUFFIX)) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(ILKSUFFIX)) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(PDBSUFFIX))
	$(RMF) $(LIBTARGETS:%$(DLLSUFFIX)=%$(SOLINKSUFFIX)) \
		$(LIBTARGETS:%$(DLLSUFFIX)=%$(SOSUFFIX))
	$(RMF) $(EXAMPLEEXE) $(EXAMPLEEXE:%.exe=%.pdb) \
		$(EXAMPLEEXE:%.exe=%.ilk) \
		$(EXAMPLEEXE:%=%.manifest)
	$(RMF) $(TESTEXE) $(TESTEXE:%.exe=%.pdb) $(TESTEXE:%.exe=%.ilk) \
		 $(TESTEXE:%=%.manifest)
	$(RMF) doc GecodeReference.chm ChangeLog changelog.hh doxygen.conf doxygen.hh
	$(RMF) $(ALLOBJ:%$(OBJSUFFIX)=%.gcno) $(TESTOBJ:%$(OBJSUFFIX)=%.gcno)
	$(RMF) $(ALLOBJ:%$(OBJSUFFIX)=%.gcda) $(TESTOBJ:%$(OBJSUFFIX)=%.gcda)
	$(RMF) $(SERREGSRC:%.cpp=%.gcda) $(SERREGSRC:%.cpp=%.gcno)

distclean: veryclean
	$(RMF) $(VARIMP:%=$(top_srcdir)/%)
	$(RMF) $(GENBRANCHSRC)
	$(RMF) Makefile
	$(RMF) $(EXTRA_HEADERS)
	$(RMF) config.log config.status Makefile.dep
	$(RMF) $(SERREGSRC)

depend: $(VARIMP:%=$(top_srcdir)/%) $(GENBRANCHSRC) \
		$(SERREGSRC:%=$(top_srcdir)/%)
	perl $(top_srcdir)/misc/makedepend.perl \
	$(top_srcdir) \
	$(ALLSRC) \
	$(SERREGSRC) \
	$(TESTSRC) > Makefile.dep

-include Makefile.dep

/* -*- mode: C++; c-basic-offset: 2; indent-tabs-mode: nil -*- */
/*
 *  Main authors:
 *     Christian Schulte <schulte@gecode.org>
 *     Mikael Lagerkvist <lagerkvist@gecode.org>
 *
 *  Copyright:
 *     Christian Schulte, 2003
 *     Mikael Lagerkvist, 2005
 *
 *  Last modified:
 *     $Date$ by $Author$
 *     $Revision$
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  Permission is hereby granted, free of charge, to any person obtaining
 *  a copy of this software and associated documentation files (the
 *  "Software"), to deal in the Software without restriction, including
 *  without limitation the rights to use, copy, modify, merge, publish,
 *  distribute, sublicense, and/or sell copies of the Software, and to
 *  permit persons to whom the Software is furnished to do so, subject to
 *  the following conditions:
 *
 *  The above copyright notice and this permission notice shall be
 *  included in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 *  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#include "examples/support.hh"
#include "gecode/minimodel.hh"

/**
 * \name Specifications for perfect square problems
 *
 * The first element is the number of squares to be placed, the
 * second the size of the master square, and the remaining the
 * sizes of the squares to be packed.
 *
 * Most of the data is taken from: C. J. Bouwkamp and A. J. W. 
 * Duijvestijn, Catalogue of Simple Perfect Squared Squares of Orders 
 * 21 Through 25, Eindhoven Univ. Technology, Dept. of Math., 
 * Report 92-WSK-03, Nov. 1992. 
 *
 * \relates PerfectSquare
 */
//@

const int s000[] = {4,4,2,2,2,2};
const int s001[] = {8,10,6,4,4,4,2,2,2,2};
const int s002[] = {17,20,9,8,8,7,5,4,4,4,4,4,3,3,3,2,2,1,1};
const int s003[] = {21,112,50,42,37,35,33,29,27,25,24,19,18,17,16,15,11,9,8,7,6,4,2};
const int s004[] = {24,175,81,64,56,55,51,43,39,38,35,33,31,30,29,20,18,16,14,9,8,5,4,3,2,1};
const int s005[] = {21,112,2,4,6,7,8,9,11,15,16,17,18,19,24,25,27,29,33,35,37,42,50};
const int s006[] = {22,110,2,3,4,6,7,8,12,13,14,15,16,17,18,21,22,23,24,26,27,28,50,60};
const int s007[] = {22,110,1,2,3,4,6,8,9,12,14,16,17,18,19,21,22,23,24,26,27,28,50,60};
const int s008[] = {22,139,1,2,3,4,7,8,10,17,18,20,21,22,24,27,28,29,30,31,32,38,59,80};
const int s009[] = {22,147,1,3,4,5,8,9,17,20,21,23,25,26,29,31,32,40,43,44,47,48,52,55};
const int s010[] = {22,147,2,4,8,10,11,12,15,19,21,22,23,25,26,32,34,37,41,43,45,47,55,59};
const int s011[] = {22,154,2,5,9,11,16,17,19,21,22,24,26,30,31,33,35,36,41,46,47,50,52,61};
const int s012[] = {22,172,1,2,3,4,9,11,13,16,17,18,19,22,24,33,36,38,39,42,44,53,75,97};
const int s013[] = {22,192,4,8,9,10,12,14,17,19,26,28,31,35,36,37,41,47,49,57,59,62,71,86};
const int s014[] = {23,110,1,2,3,4,5,7,8,10,12,13,14,15,16,19,21,28,29,31,32,37,38,41,44};
const int s015[] = {23,139,1,2,7,8,12,13,14,15,16,18,19,20,21,22,24,26,27,28,32,33,38,59,80};
const int s016[] = {23,140,1,2,3,4,5,8,10,13,16,19,20,23,27,28,29,31,33,38,42,45,48,53,54};
const int s017[] = {23,140,2,3,4,7,8,9,12,15,16,18,22,23,24,26,28,30,33,36,43,44,47,50,60};
const int s018[] = {23,145,1,2,3,4,6,8,9,12,15,20,22,24,25,26,27,29,30,31,32,34,36,61,84};
const int s019[] = {23,180,2,4,8,10,11,12,15,19,21,22,23,25,26,32,33,34,37,41,43,45,47,88,92};
const int s020[] = {23,188,2,4,8,10,11,12,15,19,21,22,23,25,26,32,33,34,37,45,47,49,51,92,96};
const int s021[] = {23,208,1,3,4,9,10,11,12,16,17,18,22,23,24,40,41,60,62,65,67,70,71,73,75};
const int s022[] = {23,215,1,3,4,9,10,11,12,16,17,18,22,23,24,40,41,60,66,68,70,71,74,76,79};
const int s023[] = {23,228,2,7,9,10,15,16,17,18,22,23,25,28,36,39,42,56,57,68,69,72,73,87,99};
const int s024[] = {23,257,2,3,9,11,14,15,17,20,22,24,28,29,32,33,49,55,57,60,63,66,79,123,134};
const int s025[] = {23,332,1,15,17,24,26,30,31,38,47,48,49,50,53,56,58,68,83,89,91,112,120,123,129};
const int s026[] = {24,120,3,4,5,6,8,9,10,12,13,14,15,16,17,19,20,23,25,32,33,34,40,41,46,47};
const int s027[] = {24,186,2,3,4,7,8,9,12,15,16,18,22,23,24,26,28,30,33,36,43,46,47,60,90,96};
const int s028[] = {24,194,2,3,7,9,10,16,17,18,19,20,23,25,28,34,36,37,42,53,54,61,65,68,69,72};
const int s029[] = {24,195,2,4,7,10,11,16,17,18,21,26,27,30,39,41,42,45,47,49,52,53,54,61,63,80};
const int s030[] = {24,196,1,2,5,10,11,15,17,18,20,21,24,26,29,31,32,34,36,40,44,47,48,51,91,105};
const int s031[] = {24,201,1,3,4,6,9,10,11,12,17,18,20,21,22,23,26,38,40,46,50,52,53,58,98,103};
const int s032[] = {24,201,1,4,5,8,9,10,11,15,16,18,19,20,22,24,26,39,42,44,49,52,54,56,93,108};
const int s033[] = {24,203,1,2,5,10,11,15,17,18,20,21,24,26,29,31,32,34,36,40,44,48,54,58,98,105};
const int s034[] = {24,247,3,5,6,9,12,14,19,23,24,25,28,32,34,36,40,45,46,48,56,62,63,66,111,136};
const int s035[] = {24,253,2,4,5,9,13,18,20,23,24,27,28,31,38,40,44,50,61,70,72,77,79,86,88,104};
const int s036[] = {24,255,3,5,10,11,16,17,20,22,23,25,26,27,28,32,41,44,52,53,59,63,65,74,118,137};
const int s037[] = {24,288,2,7,9,10,15,16,17,18,22,23,25,28,36,39,42,56,57,60,68,72,73,87,129,159};
const int s038[] = {24,288,1,5,7,8,9,14,17,20,21,26,30,32,34,36,48,51,54,59,64,69,72,93,123,165};
const int s039[] = {24,290,2,3,8,9,11,12,14,17,21,30,31,33,40,42,45,48,59,61,63,65,82,84,124,166};
const int s040[] = {24,292,1,2,3,8,12,15,16,17,20,22,24,26,29,33,44,54,57,60,63,67,73,102,117,175};
const int s041[] = {24,304,3,5,7,11,12,17,20,22,25,29,35,47,48,55,56,57,69,72,76,92,96,100,116,132};
const int s042[] = {24,304,3,4,7,12,16,20,23,24,27,28,30,32,33,36,37,44,53,57,72,76,85,99,129,175};
const int s043[] = {24,314,2,4,11,12,16,17,18,19,28,29,40,44,47,59,62,64,65,78,79,96,97,105,113,139};
const int s044[] = {24,316,3,9,10,12,13,14,15,23,24,33,36,37,48,52,54,55,57,65,66,78,79,93,144,172};
const int s045[] = {24,326,1,6,10,11,14,15,18,24,29,32,43,44,53,56,63,65,71,80,83,101,104,106,119,142};
const int s046[] = {24,423,2,9,15,17,27,29,31,32,33,36,47,49,50,60,62,77,105,114,123,127,128,132,168,186};
const int s047[] = {24,435,1,2,8,10,13,19,23,33,44,45,56,74,76,78,80,88,93,100,112,131,142,143,150,192};
const int s048[] = {24,435,3,5,9,11,12,21,24,27,30,44,45,50,54,55,63,95,101,112,117,123,134,140,178,200};
const int s049[] = {24,459,8,9,10,11,16,30,36,38,45,55,57,65,68,84,95,98,100,116,117,126,135,144,180,198};
const int s050[] = {24,459,4,6,9,10,17,21,23,25,31,33,36,38,45,50,83,115,117,126,133,135,144,146,180,198};
const int s051[] = {24,479,5,6,17,23,24,26,28,29,35,43,44,52,60,68,77,86,130,140,150,155,160,164,174,175};
const int s052[] = {25,147,3,4,5,6,8,9,10,12,13,14,15,16,17,19,20,23,25,27,32,33,34,40,41,73,74};
const int s053[] = {25,208,1,2,3,4,5,7,8,11,12,17,18,24,26,28,29,30,36,39,44,45,50,59,60,89,119};
const int s054[] = {25,213,3,5,6,7,13,16,17,20,21,23,24,25,26,28,31,35,36,47,49,56,58,74,76,81,90};
const int s055[] = {25,215,1,4,6,7,11,15,24,26,27,33,37,39,40,41,42,43,45,47,51,55,60,62,63,69,83};
const int s056[] = {25,216,1,2,3,4,5,7,8,11,16,17,18,19,25,30,32,33,39,41,45,49,54,59,64,103,113};
const int s057[] = {25,236,1,2,4,9,11,12,13,14,15,16,19,24,38,40,44,46,47,48,59,64,65,70,81,85,107};
const int s058[] = {25,242,1,3,6,7,9,13,14,16,17,19,23,25,26,28,30,31,47,51,54,57,60,64,67,111,131};
const int s059[] = {25,244,1,2,4,5,7,10,15,17,19,20,21,22,26,27,30,37,40,41,45,65,66,68,70,110,134};
const int s060[] = {25,252,4,7,10,11,12,13,23,25,29,31,32,34,36,37,38,40,42,44,62,67,68,71,77,108,113};
const int s061[] = {25,253,2,4,5,6,9,10,12,14,20,24,27,35,36,37,38,42,43,45,50,54,63,66,70,120,133};
const int s062[] = {25,260,1,4,6,7,10,15,24,26,27,28,29,31,33,34,37,38,44,65,70,71,77,78,83,100,112};
const int s063[] = {25,264,3,7,8,12,16,18,19,20,22,24,26,31,34,37,38,40,42,53,54,61,64,69,70,130,134};
const int s064[] = {25,264,3,8,12,13,16,18,20,21,22,24,26,29,34,38,40,42,43,47,54,59,64,70,71,130,134};
const int s065[] = {25,264,1,3,4,6,9,10,11,12,16,17,18,20,21,22,39,42,54,56,61,66,68,69,73,129,135};
const int s066[] = {25,265,1,3,4,6,9,10,11,12,16,17,18,20,21,22,39,42,54,56,62,66,68,69,74,130,135};
const int s067[] = {25,273,1,4,8,10,11,12,17,19,21,22,27,29,30,33,37,43,52,62,65,86,88,89,91,96,120};
const int s068[] = {25,273,1,6,9,14,16,17,18,21,22,23,25,31,32,38,44,46,48,50,54,62,65,68,78,133,140};
const int s069[] = {25,275,2,3,7,13,17,24,25,31,33,34,35,37,41,49,51,53,55,60,68,71,74,81,94,100,107};
const int s070[] = {25,276,1,5,8,9,11,18,19,21,30,36,41,44,45,46,47,51,53,58,63,69,71,84,87,105,120};
const int s071[] = {25,280,5,6,11,17,18,20,21,24,27,28,32,34,41,42,50,53,54,55,68,78,85,88,95,97,117};
const int s072[] = {25,280,2,3,7,8,14,18,30,36,37,39,44,50,52,54,56,60,63,64,65,72,75,78,79,96,106};
const int s073[] = {25,284,1,2,11,12,14,16,18,19,23,26,29,37,38,39,40,42,59,68,69,77,78,97,106,109,110};
const int s074[] = {25,286,1,4,5,7,10,12,15,16,20,23,28,30,32,33,35,37,53,54,64,68,74,79,80,133,153};
const int s075[] = {25,289,2,3,5,8,13,14,17,20,21,32,36,41,50,52,60,61,62,68,74,76,83,87,100,102,104};
const int s076[] = {25,289,2,3,4,5,7,12,16,17,19,21,23,25,29,31,32,44,57,64,65,68,72,76,84,140,149};
const int s077[] = {25,290,1,2,10,11,13,14,15,17,18,28,29,34,36,38,50,56,60,69,77,80,85,91,94,111,119};
const int s078[] = {25,293,5,6,11,17,18,20,21,24,27,28,32,34,41,42,50,54,55,66,68,78,85,88,95,110,130};
const int s079[] = {25,297,2,7,8,9,10,15,16,17,18,23,25,26,28,36,38,43,53,60,61,68,69,77,99,137,160};
const int s080[] = {25,308,1,3,4,7,10,12,13,23,25,34,37,38,39,43,44,45,62,77,79,85,87,108,113,115,116};
const int s081[] = {25,308,1,5,6,7,8,9,13,16,19,28,33,36,38,43,45,48,70,71,73,84,86,102,104,120,133};
const int s082[] = {25,309,7,8,14,16,23,24,25,26,31,33,34,39,48,56,59,60,62,70,76,82,92,100,101,108,117};
const int s083[] = {25,311,2,7,8,9,10,15,16,17,18,23,25,26,28,36,38,43,53,60,61,68,83,91,99,151,160};
const int s084[] = {25,314,1,6,7,11,16,22,26,29,32,36,38,44,51,53,64,69,70,73,74,75,85,87,101,116,128};
const int s085[] = {25,316,1,3,9,12,21,26,30,33,34,35,38,39,40,41,53,56,59,69,79,85,96,103,111,117,120};
const int s086[] = {25,317,1,5,6,7,8,9,16,17,19,32,37,40,42,47,49,52,59,75,81,92,94,110,112,113,126};
const int s087[] = {25,320,2,7,8,9,12,14,15,21,23,35,38,44,46,49,53,54,56,63,96,101,103,105,108,112,116};
const int s088[] = {25,320,3,8,9,11,17,18,22,25,26,27,29,30,31,33,35,49,51,67,72,73,80,85,95,152,168};
const int s089[] = {25,320,1,4,6,7,8,13,14,16,24,28,30,33,34,38,41,42,57,60,69,78,81,90,92,150,170};
const int s090[] = {25,320,3,4,6,8,9,14,15,16,24,28,30,31,34,38,39,42,59,60,71,78,79,90,92,150,170};
const int s091[] = {25,322,3,4,8,9,10,16,18,20,22,23,24,28,31,38,44,47,64,65,68,76,80,81,97,144,178};
const int s092[] = {25,322,3,4,8,10,15,16,18,19,20,22,24,28,35,38,44,53,59,64,68,76,80,85,93,144,178};
const int s093[] = {25,323,2,3,4,7,10,13,15,18,23,32,34,35,36,42,46,50,57,60,66,72,78,87,98,159,164};
const int s094[] = {25,323,3,8,9,11,17,18,22,25,26,27,29,30,31,33,35,49,51,67,72,73,83,88,95,155,168};
const int s095[] = {25,323,2,6,9,11,13,14,18,19,20,23,27,28,29,42,46,48,60,64,72,74,79,82,98,146,177};
const int s096[] = {25,325,3,5,6,11,12,13,18,23,25,28,32,37,40,43,45,46,51,79,92,99,103,108,112,114,134};
const int s097[] = {25,326,1,4,8,10,12,16,21,22,24,27,28,35,36,37,38,46,49,68,70,75,88,90,93,158,168};
const int s098[] = {25,327,2,9,10,12,13,16,19,21,23,26,36,44,46,52,55,61,62,74,84,87,100,103,104,120,140};
const int s099[] = {25,328,2,3,4,7,8,10,14,17,26,27,28,36,38,40,42,45,53,58,73,74,79,94,102,152,176};
const int s100[] = {25,334,1,4,8,10,12,16,21,22,24,27,28,35,36,37,38,46,49,68,75,78,88,93,98,166,168};
const int s101[] = {25,336,2,3,4,7,8,10,14,17,26,27,28,36,38,40,45,50,53,58,73,74,79,94,110,152,184};
const int s102[] = {25,338,1,4,8,10,12,16,19,22,24,25,28,36,37,38,39,46,53,68,70,73,94,96,101,164,174};
const int s103[] = {25,338,4,5,8,10,12,15,16,21,22,24,28,33,36,38,43,46,57,68,70,77,94,96,97,164,174};
const int s104[] = {25,340,1,4,5,6,11,13,16,17,22,24,44,46,50,51,52,53,61,64,66,79,84,85,92,169,171};
const int s105[] = {25,344,2,3,8,11,14,17,19,21,23,25,27,36,39,44,48,53,56,71,77,83,86,89,98,169,175};
const int s106[] = {25,359,7,8,9,10,14,17,18,23,25,27,29,31,40,41,43,46,69,74,82,85,90,98,102,172,187};
const int s107[] = {25,361,2,6,7,8,9,14,20,22,26,27,32,34,36,47,49,56,66,67,74,82,89,98,107,156,205};
const int s108[] = {25,363,1,4,6,12,13,20,21,25,26,27,28,32,37,41,45,53,58,64,69,91,97,102,106,155,208};
const int s109[] = {25,364,2,3,4,6,8,9,13,14,16,19,23,24,28,29,52,57,64,75,82,91,98,100,109,173,191};
const int s110[] = {25,367,1,4,6,12,13,20,21,25,26,27,28,32,37,41,49,53,58,64,69,91,97,102,110,155,212};
const int s111[] = {25,368,1,6,15,16,17,18,22,25,31,33,39,42,45,46,47,48,51,69,72,88,91,96,112,160,208};
const int s112[] = {25,371,1,2,7,8,20,21,22,24,26,28,30,38,43,46,50,51,64,65,70,90,95,102,109,160,211};
const int s113[] = {25,373,3,6,7,8,15,17,22,23,31,32,35,41,43,60,62,68,79,87,104,105,114,120,121,138,148};
const int s114[] = {25,378,2,3,10,17,18,20,21,22,24,27,31,38,41,48,51,56,68,78,80,85,87,96,117,165,213};
const int s115[] = {25,378,1,2,7,13,15,17,18,25,27,29,30,31,42,43,46,56,61,68,73,93,100,105,112,161,217};
const int s116[] = {25,380,4,7,17,18,19,20,21,26,31,33,35,40,45,48,49,60,67,73,79,81,87,107,113,186,194};
const int s117[] = {25,380,4,5,6,9,13,15,16,17,22,24,33,38,44,49,50,56,60,67,82,84,95,108,121,177,203};
const int s118[] = {25,381,12,13,21,23,25,27,35,36,42,45,54,57,59,60,79,82,84,85,92,95,96,100,110,111,186};
const int s119[] = {25,384,1,4,8,9,11,12,19,21,27,32,35,44,45,46,47,51,60,67,84,89,96,108,120,180,204};
const int s120[] = {25,384,1,4,8,9,11,12,15,17,19,25,26,31,32,37,44,57,60,81,84,96,99,108,120,180,204};
const int s121[] = {25,384,3,5,7,11,12,17,20,22,25,29,35,47,48,55,56,57,69,72,76,80,96,100,116,172,212};
const int s122[] = {25,385,1,2,7,13,15,17,18,25,27,29,30,31,43,46,49,56,61,68,73,93,100,105,119,161,224};
const int s123[] = {25,392,4,7,8,15,23,26,29,30,31,32,34,43,48,55,56,68,77,88,98,106,116,135,141,151,153};
const int s124[] = {25,392,10,12,14,16,19,21,25,27,31,35,39,41,51,52,54,55,73,92,98,115,121,123,129,148,171};
const int s125[] = {25,392,1,4,5,8,11,14,16,21,22,24,27,28,30,31,52,64,81,83,96,97,98,99,114,195,197};
const int s126[] = {25,393,4,8,16,20,23,24,25,27,29,37,44,45,50,53,64,66,68,69,73,85,91,101,116,186,207};
const int s127[] = {25,396,1,4,5,14,16,32,35,36,46,47,48,49,68,69,73,93,94,97,99,104,110,111,125,126,160};
const int s128[] = {25,396,1,4,5,8,11,14,16,21,22,24,27,28,30,31,52,64,81,83,98,99,100,101,114,197,199};
const int s129[] = {25,396,3,8,9,11,14,16,17,18,31,32,41,45,48,56,60,66,73,75,81,82,98,99,117,180,216};
const int s130[] = {25,398,2,6,7,11,15,17,23,28,29,39,44,46,53,56,58,65,68,99,100,119,120,134,144,145,154};
const int s131[] = {25,400,3,6,21,23,24,26,29,35,37,40,41,47,53,55,64,76,79,81,99,100,121,122,137,142,179};
const int s132[] = {25,404,3,6,7,14,17,20,21,26,28,31,32,39,46,53,54,68,71,80,88,92,100,111,113,199,205};
const int s133[] = {25,404,4,7,10,11,12,13,16,18,20,23,25,28,29,32,47,62,70,88,93,96,101,114,127,189,215};
const int s134[] = {25,408,2,3,7,13,16,18,20,27,30,33,41,43,46,52,54,57,72,79,84,100,105,108,116,195,213};
const int s135[] = {25,412,3,11,12,15,21,26,32,39,43,47,54,60,68,73,83,85,86,87,89,99,114,129,139,144,169};
const int s136[] = {25,413,5,7,17,20,34,38,39,48,56,57,59,60,64,65,70,72,75,81,105,106,110,125,148,153,155};
const int s137[] = {25,416,2,4,7,11,13,24,25,30,35,37,39,40,44,58,62,65,82,104,112,120,128,135,143,153,169};
const int s138[] = {25,416,1,2,3,8,12,15,16,17,20,22,24,26,29,31,64,75,85,88,91,94,98,104,133,179,237};
const int s139[] = {25,421,1,2,4,5,7,9,12,16,20,22,23,35,38,48,56,83,94,104,116,118,128,140,150,153,177};
const int s140[] = {25,421,5,11,12,17,18,20,23,26,29,36,38,40,44,51,55,59,72,92,97,102,105,107,117,199,222};
const int s141[] = {25,422,2,4,7,13,16,18,20,23,28,29,38,43,46,51,59,68,74,79,86,93,100,111,132,179,243};
const int s142[] = {25,425,3,4,5,9,10,12,13,14,16,19,20,31,46,48,56,79,102,104,116,126,128,140,142,157,181};
const int s143[] = {25,441,5,6,7,16,18,23,24,27,38,39,47,51,52,62,66,72,80,84,92,101,102,118,120,219,222};
const int s144[] = {25,454,1,2,11,17,29,34,35,46,48,51,53,55,63,69,79,87,88,91,109,134,136,143,150,161,184};
const int s145[] = {25,456,5,7,10,11,13,15,18,19,31,49,50,52,59,60,63,72,77,115,128,129,135,142,148,179,193};
const int s146[] = {25,465,6,9,13,14,19,21,24,25,31,32,53,56,64,73,74,82,91,111,125,127,137,139,153,173,201};
const int s147[] = {25,472,7,9,13,15,26,34,35,44,47,51,58,61,65,81,87,103,104,115,118,123,128,133,136,148,221};
const int s148[] = {25,477,3,5,12,16,19,22,25,26,37,41,49,72,76,77,82,86,87,115,117,135,141,149,167,169,193};
const int s149[] = {25,492,2,9,15,17,27,29,31,32,33,36,47,49,50,60,62,69,77,105,114,123,127,128,132,237,255};
const int s150[] = {25,492,3,5,9,11,12,21,24,27,30,44,45,50,54,55,57,63,95,101,112,117,123,134,140,235,257};
const int s151[] = {25,503,4,15,16,19,22,23,25,27,33,34,50,62,67,87,88,93,100,113,135,143,149,157,167,179,211};
const int s152[] = {25,506,1,7,24,26,33,35,40,45,47,51,55,69,87,90,93,96,117,125,134,145,146,147,160,162,199};
const int s153[] = {25,507,2,3,7,11,13,15,28,34,43,50,57,64,80,83,86,89,107,115,116,127,149,163,175,183,217};
const int s154[] = {25,512,1,7,8,9,10,15,22,32,34,46,51,65,69,71,91,105,109,111,136,139,152,157,173,200,203};
const int s155[] = {25,512,1,6,7,8,9,13,17,19,35,45,47,57,62,73,88,93,104,107,128,130,151,163,184,198,221};
const int s156[] = {25,513,6,9,10,17,19,24,28,29,37,39,64,65,68,81,98,99,102,115,145,147,153,159,165,189,201};
const int s157[] = {25,517,5,6,7,16,20,24,28,33,38,43,63,71,80,83,86,92,98,122,132,148,164,166,173,180,205};
const int s158[] = {25,524,9,12,20,21,33,35,37,39,54,55,61,62,87,90,98,101,125,132,135,141,145,159,163,164,220};
const int s159[] = {25,527,11,12,13,14,19,30,41,47,50,52,59,68,71,81,94,97,107,132,147,151,155,169,175,183,197};
const int s160[] = {25,528,2,9,15,17,27,29,31,32,33,36,47,49,50,60,62,69,77,123,127,128,132,141,150,255,273};
const int s161[] = {25,529,9,12,20,21,33,35,37,39,54,55,61,62,87,90,98,101,125,132,140,141,145,159,163,169,225};
const int s162[] = {25,531,6,9,10,17,19,24,29,31,39,40,67,68,71,84,101,102,105,118,151,153,159,165,171,195,207};
const int s163[] = {25,532,16,18,26,27,33,39,41,50,51,55,69,71,84,87,91,94,132,133,141,143,164,168,169,173,195};
const int s164[] = {25,534,11,13,15,17,18,27,38,44,49,52,60,61,68,81,87,94,107,135,149,153,159,171,174,189,210};
const int s165[] = {25,535,2,8,26,27,36,41,45,57,62,77,88,95,97,99,101,102,109,114,117,118,141,147,168,192,226};
const int s166[] = {25,536,1,8,21,30,31,32,33,41,44,46,49,55,57,61,84,91,113,134,137,139,150,155,176,205,247};
const int s167[] = {25,536,3,5,9,11,12,21,24,27,30,44,45,50,54,55,57,63,95,117,123,134,140,145,156,257,279};
const int s168[] = {25,540,1,7,8,9,10,14,19,34,36,51,58,69,81,83,97,109,111,115,136,149,152,167,183,208,221};
const int s169[] = {25,540,6,13,15,25,28,36,43,47,55,57,58,59,60,65,82,89,91,107,124,127,144,163,183,233,250};
const int s170[] = {25,540,8,9,10,11,16,30,36,38,45,55,57,65,68,81,84,95,98,100,116,117,126,135,144,261,279};
const int s171[] = {25,540,8,9,10,11,16,30,36,38,45,55,57,65,68,81,84,95,98,100,116,117,126,135,144,261,279};
const int s172[] = {25,540,4,6,9,10,17,21,23,25,31,33,36,38,45,50,81,83,115,117,126,133,135,144,146,261,279};
const int s173[] = {25,540,4,6,9,10,17,21,23,25,31,33,36,38,45,50,81,83,115,117,126,133,135,144,146,261,279};
const int s174[] = {25,541,3,4,11,13,16,17,21,25,26,44,46,64,75,86,87,97,106,109,133,141,165,185,191,215,217};
const int s175[] = {25,541,3,5,27,32,33,37,47,50,53,56,57,69,71,78,97,98,109,111,126,144,165,169,183,189,232};
const int s176[] = {25,544,1,7,24,26,33,35,40,45,47,51,55,69,87,90,93,96,117,125,134,145,147,184,198,199,200};
const int s177[] = {25,544,6,8,20,21,23,41,42,48,59,61,77,80,81,85,90,92,93,102,115,132,139,168,198,207,244};
const int s178[] = {25,547,3,5,16,22,26,27,35,47,49,59,67,71,72,85,87,102,103,111,137,144,150,197,200,203,207};
const int s179[] = {25,549,4,10,14,24,26,31,34,36,38,40,43,48,59,63,74,89,97,105,117,124,136,152,156,241,308};
const int s180[] = {25,550,1,2,5,13,19,20,25,30,39,43,58,59,73,75,76,90,95,103,116,128,130,132,172,262,288};
const int s181[] = {25,550,1,11,16,23,24,27,29,36,41,43,44,47,59,70,71,80,99,103,111,116,128,156,167,227,323};
const int s182[] = {25,551,3,5,24,25,26,30,35,36,39,40,42,57,68,76,94,109,120,128,152,162,166,175,176,200,223};
const int s183[] = {25,552,5,17,18,22,25,27,32,33,39,59,62,87,91,100,102,111,112,135,137,149,165,168,183,201,204};
const int s184[] = {25,552,1,3,4,7,8,9,10,15,18,19,21,41,52,54,73,93,95,123,125,136,138,153,168,261,291};
const int s185[] = {25,556,6,8,10,13,19,25,32,37,49,54,58,76,84,91,92,100,107,128,145,156,165,185,195,205,206};
const int s186[] = {25,556,3,12,13,15,19,23,27,34,35,39,42,45,48,52,53,87,140,145,158,166,171,184,189,201,227};
const int s187[] = {25,556,3,12,13,15,19,23,27,34,35,39,42,45,48,52,53,87,140,145,158,166,171,184,189,201,227};
const int s188[] = {25,556,1,5,7,8,9,10,12,14,20,27,31,43,47,50,74,93,97,121,125,139,143,153,167,264,292};
const int s189[] = {25,562,2,3,5,8,13,19,20,29,33,47,53,54,64,65,76,93,119,123,142,157,161,180,184,221,259};
const int s190[] = {25,570,3,9,10,33,36,38,40,42,50,51,60,69,72,75,77,90,113,140,141,151,152,189,200,229,230};
const int s191[] = {25,575,4,6,14,16,31,39,63,69,74,81,88,103,107,111,115,120,131,132,133,147,156,159,164,198,218};
const int s192[] = {25,576,1,4,9,11,15,19,22,34,36,53,60,76,82,84,104,126,127,128,153,156,165,174,183,219,237};
const int s193[] = {25,576,8,9,10,11,16,30,36,38,45,55,57,65,68,81,84,95,98,100,116,135,144,153,162,279,297};
const int s194[] = {25,576,4,6,9,10,17,21,23,25,31,33,36,38,45,50,81,83,115,133,135,144,146,153,162,279,297};
const int s195[] = {25,580,2,5,7,10,12,13,19,21,22,29,36,40,61,65,74,101,135,139,161,179,183,192,205,209,236};
const int s196[] = {25,580,5,6,11,13,16,17,21,25,34,44,54,68,80,88,100,112,120,135,142,145,170,173,195,215,265};
const int s197[] = {25,580,11,12,16,17,29,32,39,41,53,55,59,60,68,70,81,84,92,124,125,128,129,156,171,280,300};
const int s198[] = {25,593,13,14,15,35,48,51,55,67,73,79,83,91,94,105,109,116,119,124,133,150,171,173,196,217,226};
const int s199[] = {25,595,4,13,18,19,22,35,40,48,58,61,62,77,78,82,83,86,118,149,163,168,187,192,202,206,240};
const int s200[] = {25,601,7,8,25,34,41,42,46,48,54,55,62,70,71,74,98,103,116,143,168,169,190,192,193,218,240};
const int s201[] = {25,603,7,11,12,14,21,25,32,40,52,56,60,67,68,81,91,92,132,144,149,163,177,191,196,235,263};
const int s202[] = {25,603,13,23,26,27,35,44,45,49,53,54,57,66,75,99,101,110,122,126,144,158,175,180,189,234,270};
const int s203[] = {25,607,6,8,10,13,19,25,32,37,49,54,58,76,84,91,92,100,107,128,156,185,196,205,206,216,246};
const int s204[] = {25,609,9,14,15,17,32,45,47,58,67,74,76,79,80,83,97,111,125,126,150,170,186,188,215,224,235};
const int s205[] = {25,611,1,10,22,26,32,41,45,54,57,61,62,66,85,86,87,95,97,101,119,132,136,167,176,268,343};
const int s206[] = {25,614,15,22,24,31,33,49,53,54,57,60,63,68,74,81,83,104,109,151,155,163,167,217,229,230,234};
const int s207[] = {25,634,15,17,24,26,33,43,44,54,57,60,63,73,79,81,88,109,119,160,161,172,173,227,234,235,239};
const int s208[] = {25,643,2,9,21,29,38,40,41,42,58,62,67,76,82,83,85,96,104,166,172,186,192,201,207,250,270};
const int s209[] = {25,644,7,9,13,18,19,22,31,49,53,61,66,68,71,87,93,94,119,164,178,192,199,206,227,239,253};
const int s210[] = {25,655,10,14,15,21,25,26,31,40,51,53,54,57,65,83,84,86,151,152,173,193,194,215,216,246,288};
const int s211[] = {25,661,5,7,17,18,23,31,36,38,41,64,73,77,83,84,102,106,111,161,175,196,203,210,238,248,262};

const int* specs[] = {
  &s000[0],&s001[0],&s002[0],&s003[0],&s004[0],&s005[0],
  &s006[0],&s007[0],&s008[0],&s009[0],&s010[0],&s011[0],
  &s012[0],&s013[0],&s014[0],&s015[0],&s016[0],&s017[0],
  &s018[0],&s019[0],&s020[0],&s021[0],&s022[0],&s023[0],
  &s024[0],&s025[0],&s026[0],&s027[0],&s028[0],&s029[0],
  &s030[0],&s031[0],&s032[0],&s033[0],&s034[0],&s035[0],
  &s036[0],&s037[0],&s038[0],&s039[0],&s040[0],&s041[0],
  &s042[0],&s043[0],&s044[0],&s045[0],&s046[0],&s047[0],
  &s048[0],&s049[0],&s050[0],&s051[0],&s052[0],&s053[0],
  &s054[0],&s055[0],&s056[0],&s057[0],&s058[0],&s059[0],
  &s060[0],&s061[0],&s062[0],&s063[0],&s064[0],&s065[0],
  &s066[0],&s067[0],&s068[0],&s069[0],&s070[0],&s071[0],
  &s072[0],&s073[0],&s074[0],&s075[0],&s076[0],&s077[0],
  &s078[0],&s079[0],&s080[0],&s081[0],&s082[0],&s083[0],
  &s084[0],&s085[0],&s086[0],&s087[0],&s088[0],&s089[0],
  &s090[0],&s091[0],&s092[0],&s093[0],&s094[0],&s095[0],
  &s096[0],&s097[0],&s098[0],&s099[0],&s100[0],&s101[0],
  &s102[0],&s103[0],&s104[0],&s105[0],&s106[0],&s107[0],
  &s108[0],&s109[0],&s110[0],&s111[0],&s112[0],&s113[0],
  &s114[0],&s115[0],&s116[0],&s117[0],&s118[0],&s119[0],
  &s120[0],&s121[0],&s122[0],&s123[0],&s124[0],&s125[0],
  &s126[0],&s127[0],&s128[0],&s129[0],&s130[0],&s131[0],
  &s132[0],&s133[0],&s134[0],&s135[0],&s136[0],&s137[0],
  &s138[0],&s139[0],&s140[0],&s141[0],&s142[0],&s143[0],
  &s144[0],&s145[0],&s146[0],&s147[0],&s148[0],&s149[0],
  &s150[0],&s151[0],&s152[0],&s153[0],&s154[0],&s155[0],
  &s156[0],&s157[0],&s158[0],&s159[0],&s160[0],&s161[0],
  &s162[0],&s163[0],&s164[0],&s165[0],&s166[0],&s167[0],
  &s168[0],&s169[0],&s170[0],&s171[0],&s172[0],&s173[0],
  &s174[0],&s175[0],&s176[0],&s177[0],&s178[0],&s179[0],
  &s180[0],&s181[0],&s182[0],&s183[0],&s184[0],&s185[0],
  &s186[0],&s187[0],&s188[0],&s189[0],&s190[0],&s191[0],
  &s192[0],&s193[0],&s194[0],&s195[0],&s196[0],&s197[0],
  &s198[0],&s199[0],&s200[0],&s201[0],&s202[0],&s203[0],
  &s204[0],&s205[0],&s206[0],&s207[0],&s208[0],&s209[0],
  &s210[0],&s211[0]
};
const unsigned int n_specs = sizeof(specs) / sizeof(int*);
//@}

/**
 * \brief %Example: packing squares into a rectangle
 *
 * See problem 9 at http://www.csplib.org/.
 *
 * \ingroup ExProblem
 */
class PerfectSquare : public Example {
protected:
  /// Array of x-coordinates of squares
  IntVarArray x;
  /// Array of y-coordinates of squares
  IntVarArray y;
public:
  /// Propagation to use for model
  enum {
    PROP_REIFIED,     ///< Use reified constraints
    PROP_CUMULATIVES, ///< Use cumulatives constraint
  };
  /// Actual model
  PerfectSquare(const SizeOptions& opt)
    : x(this,specs[opt.size()][0],0,specs[opt.size()][1]-1), 
      y(this,specs[opt.size()][0],0,specs[opt.size()][1]-1) {

    const int* s = specs[opt.size()];
    int n = *s++;
    int w = *s++;

    // Restrict position according to square size
    for (int i=n; i--; ) {
      rel(this, x[i], IRT_LQ, w-s[i]);
      rel(this, y[i], IRT_LQ, w-s[i]);
    }

    // Squares do not overlap
    for (int i=0; i<n; i++)
      for (int j=i+1; j<n; j++)
        post(this, tt(~(x[j]-x[i] >= s[i]) || ~(x[i]-x[j] >= s[j]) ||
                      ~(y[j]-y[i] >= s[i]) || ~(y[i]-y[j] >= s[j])));

    /*
     * Symmetry breaking (assumes that square size are sorted)
     *
     */
    for (int i=n; i--; )
      if (s[i] == s[i+1]) 
        rel(this, x[i], IRT_LQ, x[i+1]);

    /*
     * Capacity constraints
     *
     */
    if (opt.propagation() == PROP_REIFIED) {
      IntArgs sa(n,s);
      BoolVarArgs b(n);
      for (int cx=0; cx<w; cx++) {
        for (int i=0; i<n; i++) {
          b[i].init(this,0,1);
          dom(this, x[i], cx-s[i]+1, cx, b[i]);
        }
        linear(this, sa, b, IRT_EQ, w);
      }
      for (int cy=0; cy<w; cy++) {
        for (int i=0; i<n; i++) {
          b[i].init(this,0,1);
          dom(this, y[i], cy-s[i]+1, cy, b[i]);
        }
        linear(this, sa, b, IRT_EQ, w);
      }
    } else {
      IntArgs m(n), dh(n);
      for (int i = n; i--; ) {
        m[i]=0; dh[i]=s[i];
      }
      IntVarArgs e(n);
      IntArgs limit(1);
      {
        // x-direction
        for (int i = n; i--; )
          e[i].init(this, 0, w);
        limit[0] = w;
        cumulatives(this, m, x, dh, e, dh, limit, true);
        cumulatives(this, m, x, dh, e, dh, limit, false);
      }
      {
        // y-direction
        for (int i = n; i--; )
          e[i].init(this, 0, w);
        limit[0] = w;
        cumulatives(this, m, y, dh, e, dh, limit, true);
        cumulatives(this, m, y, dh, e, dh, limit, false);
      }
    }

    {
      IntVarArgs rx(n), ry(n);
      for (int i=n; i--; ) {
        rx[i]=x[n-i-1]; ry[i]=y[n-i-1];
      }
      branch(this, rx, INT_VAR_MIN_MIN, INT_VAL_MIN);
      branch(this, ry, INT_VAR_MIN_MIN, INT_VAL_MIN);
    }
  }

  /// Constructor for cloning \a s
  PerfectSquare(bool share, PerfectSquare& s) : Example(share,s) {
    x.update(this, share, s.x);
    y.update(this, share, s.y);
  }
  /// Copy during cloning
  virtual Space*
  copy(bool share) {
    return new PerfectSquare(share,*this);
  }
  /// Print solution
  virtual void
  print(std::ostream& os) {
    os << "\t";
    for (int i=0; i<x.size(); i++)
      os << "(" << x[i] << "," << y[i] << ") ";
    os << std::endl;
  }
};

/** \brief Main-function
 *  \relates PerfectSquare
 */
int
main(int argc, char* argv[]) {
  SizeOptions opt("PerfectSquare");
  opt.size(4);
  opt.propagation(PerfectSquare::PROP_REIFIED);
  opt.propagation(PerfectSquare::PROP_REIFIED,     "reified");
  opt.propagation(PerfectSquare::PROP_CUMULATIVES, "cumulatives");
  opt.parse(argc,argv);
  if (opt.size() >= n_specs) {
    std::cerr << "Error: size must be between 0 and " << n_specs - 1
              << std::endl;
    return 1;
  }
  Example::run<PerfectSquare,DFS,SizeOptions>(opt);
  return 0;
}

// STATISTICS: example-any


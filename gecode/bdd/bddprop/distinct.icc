/*
 *  Main authors:
 *     Patrick Pekczynski <pekczynski@ps.uni-sb.de>
 *
 *  Copyright:
 *     Patrick Pekczynski, 2006
 *
 *  Last modified:
 *     $Date: 2006-07-29 15:55:20 +0000 (Sat, 29 Jul 2006) $ by $Author: pekczynski $
 *     $Revision: 3478 $
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  See the file "LICENSE" for information on usage and
 *  redistribution of this file, and for a
 *     DISCLAIMER OF ALL WARRANTIES.
 *
 */

using namespace Gecode::Bdd;

namespace Gecode {

  template <class View>
  void distinct(Space* home, ViewArray<View>& x, SetConLevel scl) {
  
    int n = x.size();
    BddMgr* mgr = x[0].manager();
    // build partition
    GecodeBdd d0 = BDDTOP;     

    int width = x[0].table_width();

    for (int i = 0; i < n - 1; i++) {
      for (int j = i + 1; j < n; j++) {
	GecodeBdd nq = BDDBOT;
	for (unsigned int k = 0; k < width; k++) {
	  nq |= !(x[i].getbdd(k) % x[j].getbdd(k));
	}
	d0 &= nq;
      }
    } 

    GECODE_ES_FAIL(home, NaryBddProp<View>::post(home, x, d0, scl));
  }
}

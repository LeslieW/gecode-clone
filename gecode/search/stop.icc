/*
 *  Main authors:
 *     Christian Schulte <schulte@gecode.org>
 *
 *  Copyright:
 *     Christian Schulte, 2006
 *
 *  Last modified:
 *     $Date$ by $Author$
 *     $Revision$
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  See the file "LICENSE" for information on usage and
 *  redistribution of this file, and for a
 *     DISCLAIMER OF ALL WARRANTIES.
 *
 */

namespace Gecode { namespace Search {

  /*
   * Base class
   *
   */
  forceinline
  Stop::Stop(void) {}


  /*
   * Stopping for memory limit
   *
   */

  forceinline
  MemoryStop::MemoryStop(size_t l0) : l(l0) {}

  forceinline size_t
  MemoryStop::limit(void) const {
    return l;
  }

  forceinline void
  MemoryStop::limit(size_t l0) {
    l=l0;
  }

  
  /*
   * Stopping for memory limit
   *
   */

  forceinline
  FailStop::FailStop(unsigned long int l0) : l(l0) {}

  forceinline unsigned long int
  FailStop::limit(void) const {
    return l;
  }

  forceinline void
  FailStop::limit(unsigned long int l0) {
    l=l0;
  }

  
  /*
   * Stopping for memory limit
   *
   */

  forceinline
  TimeStop::TimeStop(unsigned long int l0) 
    : s(clock()), l(l0) {}

  forceinline unsigned long int
  TimeStop::limit(void) const {
    return l;
  }

  forceinline void
  TimeStop::limit(unsigned long int l0) {
    l=l0;
  }

  forceinline void
  TimeStop::reset(void) {
    s=clock();
  }

}}

// STATISTICS: search-any

/*
 *  Main authors:
 *     Christian Schulte <schulte@gecode.org>
 *     Mikael Lagerkvist <lagerkvist@gecode.org>
 *
 *  Copyright:
 *     Christian Schulte, 2004
 *     Mikael Lagerkvist, 2005
 *
 *  Last modified:
 *     $Date$ by $Author$
 *     $Revision$
 *
 *  This file is part of Gecode, the generic constraint
 *  development environment:
 *     http://www.gecode.org
 *
 *  See the file "LICENSE" for information on usage and
 *  redistribution of this file, and for a
 *     DISCLAIMER OF ALL WARRANTIES.
 *
 */

namespace Gecode { namespace MiniModel {

  /**
   * \defgroup FuncThrowMiniModel MiniModel exceptions
   * \ingroup FuncThrow
   */

  //@{
  
  /// %Exception: Sizes of arguments does not match
  class ArgumentSizeMismatch : public Exception  {
  public:
    /// Initialize with location \a l
    ArgumentSizeMismatch(const char* l);
  };
  
  /// %Exception: Argument out of range
  class ArgumentOutOfRange : public Exception  {
  public:
    /// Initialize with location \a l
    ArgumentOutOfRange(const char* l);
  };

  //@}

  inline
  ArgumentSizeMismatch::ArgumentSizeMismatch(const char* l)
    : Exception(l,"Sizes of argument arrays mismatch") {}
  
  inline
  ArgumentOutOfRange::ArgumentOutOfRange(const char* l)
    : Exception(l,"Argument out of range") {}
  
}}

// STATISTICS: minimodel-any
